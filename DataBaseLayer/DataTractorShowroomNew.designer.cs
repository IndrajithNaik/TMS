#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataBaseLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TRACTOR_DATABASE")]
	public partial class DataTractorShowroomNewDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBALANCE(BALANCE instance);
    partial void UpdateBALANCE(BALANCE instance);
    partial void DeleteBALANCE(BALANCE instance);
    partial void InsertVILLAGE(VILLAGE instance);
    partial void UpdateVILLAGE(VILLAGE instance);
    partial void DeleteVILLAGE(VILLAGE instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertDELIVERY_CHALAN(DELIVERY_CHALAN instance);
    partial void UpdateDELIVERY_CHALAN(DELIVERY_CHALAN instance);
    partial void DeleteDELIVERY_CHALAN(DELIVERY_CHALAN instance);
    partial void InsertDISTRICT(DISTRICT instance);
    partial void UpdateDISTRICT(DISTRICT instance);
    partial void DeleteDISTRICT(DISTRICT instance);
    partial void InsertINVOICE(INVOICE instance);
    partial void UpdateINVOICE(INVOICE instance);
    partial void DeleteINVOICE(INVOICE instance);
    partial void InsertJOB_CARD(JOB_CARD instance);
    partial void UpdateJOB_CARD(JOB_CARD instance);
    partial void DeleteJOB_CARD(JOB_CARD instance);
    partial void InsertJOB_COMPLAINT(JOB_COMPLAINT instance);
    partial void UpdateJOB_COMPLAINT(JOB_COMPLAINT instance);
    partial void DeleteJOB_COMPLAINT(JOB_COMPLAINT instance);
    partial void InsertJOB_TRACTOR_CUSTOMER(JOB_TRACTOR_CUSTOMER instance);
    partial void UpdateJOB_TRACTOR_CUSTOMER(JOB_TRACTOR_CUSTOMER instance);
    partial void DeleteJOB_TRACTOR_CUSTOMER(JOB_TRACTOR_CUSTOMER instance);
    partial void InsertMASTER(MASTER instance);
    partial void UpdateMASTER(MASTER instance);
    partial void DeleteMASTER(MASTER instance);
    partial void InsertOLD_TRACTOR(OLD_TRACTOR instance);
    partial void UpdateOLD_TRACTOR(OLD_TRACTOR instance);
    partial void DeleteOLD_TRACTOR(OLD_TRACTOR instance);
    partial void InsertSALES_INVOICE(SALES_INVOICE instance);
    partial void UpdateSALES_INVOICE(SALES_INVOICE instance);
    partial void DeleteSALES_INVOICE(SALES_INVOICE instance);
    partial void InsertSERVICE_CHARGE(SERVICE_CHARGE instance);
    partial void UpdateSERVICE_CHARGE(SERVICE_CHARGE instance);
    partial void DeleteSERVICE_CHARGE(SERVICE_CHARGE instance);
    partial void InsertSPARE_PART(SPARE_PART instance);
    partial void UpdateSPARE_PART(SPARE_PART instance);
    partial void DeleteSPARE_PART(SPARE_PART instance);
    partial void InsertSPARE_PURCHASES_SALE(SPARE_PURCHASES_SALE instance);
    partial void UpdateSPARE_PURCHASES_SALE(SPARE_PURCHASES_SALE instance);
    partial void DeleteSPARE_PURCHASES_SALE(SPARE_PURCHASES_SALE instance);
    partial void InsertSPARE_RATE(SPARE_RATE instance);
    partial void UpdateSPARE_RATE(SPARE_RATE instance);
    partial void DeleteSPARE_RATE(SPARE_RATE instance);
    partial void InsertSUPPLIER(SUPPLIER instance);
    partial void UpdateSUPPLIER(SUPPLIER instance);
    partial void DeleteSUPPLIER(SUPPLIER instance);
    partial void InsertTALUK(TALUK instance);
    partial void UpdateTALUK(TALUK instance);
    partial void DeleteTALUK(TALUK instance);
    partial void InsertTRACTOR_MODEL(TRACTOR_MODEL instance);
    partial void UpdateTRACTOR_MODEL(TRACTOR_MODEL instance);
    partial void DeleteTRACTOR_MODEL(TRACTOR_MODEL instance);
    partial void InsertTRACTOR_PART(TRACTOR_PART instance);
    partial void UpdateTRACTOR_PART(TRACTOR_PART instance);
    partial void DeleteTRACTOR_PART(TRACTOR_PART instance);
    partial void InsertTRACTOR_PURCHASE(TRACTOR_PURCHASE instance);
    partial void UpdateTRACTOR_PURCHASE(TRACTOR_PURCHASE instance);
    partial void DeleteTRACTOR_PURCHASE(TRACTOR_PURCHASE instance);
    #endregion
		
		public DataTractorShowroomNewDataContext() : 
				base(global::DataBaseLayer.Properties.Settings.Default.TRACTOR_DATABASEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataTractorShowroomNewDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataTractorShowroomNewDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataTractorShowroomNewDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataTractorShowroomNewDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BALANCE> BALANCEs
		{
			get
			{
				return this.GetTable<BALANCE>();
			}
		}
		
		public System.Data.Linq.Table<VILLAGE> VILLAGEs
		{
			get
			{
				return this.GetTable<VILLAGE>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<DELIVERY_CHALAN> DELIVERY_CHALANs
		{
			get
			{
				return this.GetTable<DELIVERY_CHALAN>();
			}
		}
		
		public System.Data.Linq.Table<DISTRICT> DISTRICTs
		{
			get
			{
				return this.GetTable<DISTRICT>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE> INVOICEs
		{
			get
			{
				return this.GetTable<INVOICE>();
			}
		}
		
		public System.Data.Linq.Table<JOB_CARD> JOB_CARDs
		{
			get
			{
				return this.GetTable<JOB_CARD>();
			}
		}
		
		public System.Data.Linq.Table<JOB_COMPLAINT> JOB_COMPLAINTs
		{
			get
			{
				return this.GetTable<JOB_COMPLAINT>();
			}
		}
		
		public System.Data.Linq.Table<JOB_TRACTOR_CUSTOMER> JOB_TRACTOR_CUSTOMERs
		{
			get
			{
				return this.GetTable<JOB_TRACTOR_CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<MASTER> MASTERs
		{
			get
			{
				return this.GetTable<MASTER>();
			}
		}
		
		public System.Data.Linq.Table<OLD_TRACTOR> OLD_TRACTORs
		{
			get
			{
				return this.GetTable<OLD_TRACTOR>();
			}
		}
		
		public System.Data.Linq.Table<SALES_INVOICE> SALES_INVOICEs
		{
			get
			{
				return this.GetTable<SALES_INVOICE>();
			}
		}
		
		public System.Data.Linq.Table<SERVICE_CHARGE> SERVICE_CHARGEs
		{
			get
			{
				return this.GetTable<SERVICE_CHARGE>();
			}
		}
		
		public System.Data.Linq.Table<SPARE_PART> SPARE_PARTs
		{
			get
			{
				return this.GetTable<SPARE_PART>();
			}
		}
		
		public System.Data.Linq.Table<SPARE_PURCHASES_SALE> SPARE_PURCHASES_SALEs
		{
			get
			{
				return this.GetTable<SPARE_PURCHASES_SALE>();
			}
		}
		
		public System.Data.Linq.Table<SPARE_RATE> SPARE_RATEs
		{
			get
			{
				return this.GetTable<SPARE_RATE>();
			}
		}
		
		public System.Data.Linq.Table<SUPPLIER> SUPPLIERs
		{
			get
			{
				return this.GetTable<SUPPLIER>();
			}
		}
		
		public System.Data.Linq.Table<TALUK> TALUKs
		{
			get
			{
				return this.GetTable<TALUK>();
			}
		}
		
		public System.Data.Linq.Table<TRACTOR_MODEL> TRACTOR_MODELs
		{
			get
			{
				return this.GetTable<TRACTOR_MODEL>();
			}
		}
		
		public System.Data.Linq.Table<TRACTOR_PART> TRACTOR_PARTs
		{
			get
			{
				return this.GetTable<TRACTOR_PART>();
			}
		}
		
		public System.Data.Linq.Table<TRACTOR_PURCHASE> TRACTOR_PURCHASEs
		{
			get
			{
				return this.GetTable<TRACTOR_PURCHASE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BALANCE")]
	public partial class BALANCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BALANCE_ID;
		
		private decimal _AMOUNT_PAID;
		
		private System.DateTime _PAID_DATE;
		
		private int _SALES_INVOICE_ID;
		
		private EntityRef<SALES_INVOICE> _SALES_INVOICE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBALANCE_IDChanging(int value);
    partial void OnBALANCE_IDChanged();
    partial void OnAMOUNT_PAIDChanging(decimal value);
    partial void OnAMOUNT_PAIDChanged();
    partial void OnPAID_DATEChanging(System.DateTime value);
    partial void OnPAID_DATEChanged();
    partial void OnSALES_INVOICE_IDChanging(int value);
    partial void OnSALES_INVOICE_IDChanged();
    #endregion
		
		public BALANCE()
		{
			this._SALES_INVOICE = default(EntityRef<SALES_INVOICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BALANCE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BALANCE_ID
		{
			get
			{
				return this._BALANCE_ID;
			}
			set
			{
				if ((this._BALANCE_ID != value))
				{
					this.OnBALANCE_IDChanging(value);
					this.SendPropertyChanging();
					this._BALANCE_ID = value;
					this.SendPropertyChanged("BALANCE_ID");
					this.OnBALANCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMOUNT_PAID", DbType="Decimal(18,2) NOT NULL")]
		public decimal AMOUNT_PAID
		{
			get
			{
				return this._AMOUNT_PAID;
			}
			set
			{
				if ((this._AMOUNT_PAID != value))
				{
					this.OnAMOUNT_PAIDChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT_PAID = value;
					this.SendPropertyChanged("AMOUNT_PAID");
					this.OnAMOUNT_PAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAID_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime PAID_DATE
		{
			get
			{
				return this._PAID_DATE;
			}
			set
			{
				if ((this._PAID_DATE != value))
				{
					this.OnPAID_DATEChanging(value);
					this.SendPropertyChanging();
					this._PAID_DATE = value;
					this.SendPropertyChanged("PAID_DATE");
					this.OnPAID_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALES_INVOICE_ID", DbType="Int NOT NULL")]
		public int SALES_INVOICE_ID
		{
			get
			{
				return this._SALES_INVOICE_ID;
			}
			set
			{
				if ((this._SALES_INVOICE_ID != value))
				{
					if (this._SALES_INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSALES_INVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._SALES_INVOICE_ID = value;
					this.SendPropertyChanged("SALES_INVOICE_ID");
					this.OnSALES_INVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_BALANCE", Storage="_SALES_INVOICE", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID", IsForeignKey=true)]
		public SALES_INVOICE SALES_INVOICE
		{
			get
			{
				return this._SALES_INVOICE.Entity;
			}
			set
			{
				SALES_INVOICE previousValue = this._SALES_INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._SALES_INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_INVOICE.Entity = null;
						previousValue.BALANCEs.Remove(this);
					}
					this._SALES_INVOICE.Entity = value;
					if ((value != null))
					{
						value.BALANCEs.Add(this);
						this._SALES_INVOICE_ID = value.SALES_INVOICE_ID;
					}
					else
					{
						this._SALES_INVOICE_ID = default(int);
					}
					this.SendPropertyChanged("SALES_INVOICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VILLAGES")]
	public partial class VILLAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VILLAGE_ID;
		
		private string _VILLAGE_NAME;
		
		private int _TALUK_ID;
		
		private EntitySet<CUSTOMER> _CUSTOMERs;
		
		private EntityRef<TALUK> _TALUK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVILLAGE_IDChanging(int value);
    partial void OnVILLAGE_IDChanged();
    partial void OnVILLAGE_NAMEChanging(string value);
    partial void OnVILLAGE_NAMEChanged();
    partial void OnTALUK_IDChanging(int value);
    partial void OnTALUK_IDChanged();
    #endregion
		
		public VILLAGE()
		{
			this._CUSTOMERs = new EntitySet<CUSTOMER>(new Action<CUSTOMER>(this.attach_CUSTOMERs), new Action<CUSTOMER>(this.detach_CUSTOMERs));
			this._TALUK = default(EntityRef<TALUK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VILLAGE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VILLAGE_ID
		{
			get
			{
				return this._VILLAGE_ID;
			}
			set
			{
				if ((this._VILLAGE_ID != value))
				{
					this.OnVILLAGE_IDChanging(value);
					this.SendPropertyChanging();
					this._VILLAGE_ID = value;
					this.SendPropertyChanged("VILLAGE_ID");
					this.OnVILLAGE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VILLAGE_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VILLAGE_NAME
		{
			get
			{
				return this._VILLAGE_NAME;
			}
			set
			{
				if ((this._VILLAGE_NAME != value))
				{
					this.OnVILLAGE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._VILLAGE_NAME = value;
					this.SendPropertyChanged("VILLAGE_NAME");
					this.OnVILLAGE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TALUK_ID", DbType="Int NOT NULL")]
		public int TALUK_ID
		{
			get
			{
				return this._TALUK_ID;
			}
			set
			{
				if ((this._TALUK_ID != value))
				{
					if (this._TALUK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTALUK_IDChanging(value);
					this.SendPropertyChanging();
					this._TALUK_ID = value;
					this.SendPropertyChanged("TALUK_ID");
					this.OnTALUK_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VILLAGE_CUSTOMER", Storage="_CUSTOMERs", ThisKey="VILLAGE_ID", OtherKey="VILLAGE_ID")]
		public EntitySet<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this._CUSTOMERs;
			}
			set
			{
				this._CUSTOMERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TALUK_VILLAGE", Storage="_TALUK", ThisKey="TALUK_ID", OtherKey="TALUK_ID", IsForeignKey=true)]
		public TALUK TALUK
		{
			get
			{
				return this._TALUK.Entity;
			}
			set
			{
				TALUK previousValue = this._TALUK.Entity;
				if (((previousValue != value) 
							|| (this._TALUK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TALUK.Entity = null;
						previousValue.VILLAGEs.Remove(this);
					}
					this._TALUK.Entity = value;
					if ((value != null))
					{
						value.VILLAGEs.Add(this);
						this._TALUK_ID = value.TALUK_ID;
					}
					else
					{
						this._TALUK_ID = default(int);
					}
					this.SendPropertyChanged("TALUK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.VILLAGE = this;
		}
		
		private void detach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.VILLAGE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CUSTOMER_ID;
		
		private int _VILLAGE_ID;
		
		private string _CUSTOMER_NAME;
		
		private long _CONTACT_NO_1;
		
		private System.Nullable<long> _CONTACT_NO_2;
		
		private string _CUSTOMER_ADDRESS;
		
		private string _CUSTOMER_EMAIL;
		
		private int _STATUS_ID;
		
		private EntitySet<DELIVERY_CHALAN> _DELIVERY_CHALANs;
		
		private EntitySet<SALES_INVOICE> _SALES_INVOICEs;
		
		private EntityRef<VILLAGE> _VILLAGE;
		
		private EntityRef<MASTER> _MASTER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCUSTOMER_IDChanging(int value);
    partial void OnCUSTOMER_IDChanged();
    partial void OnVILLAGE_IDChanging(int value);
    partial void OnVILLAGE_IDChanged();
    partial void OnCUSTOMER_NAMEChanging(string value);
    partial void OnCUSTOMER_NAMEChanged();
    partial void OnCONTACT_NO_1Changing(long value);
    partial void OnCONTACT_NO_1Changed();
    partial void OnCONTACT_NO_2Changing(System.Nullable<long> value);
    partial void OnCONTACT_NO_2Changed();
    partial void OnCUSTOMER_ADDRESSChanging(string value);
    partial void OnCUSTOMER_ADDRESSChanged();
    partial void OnCUSTOMER_EMAILChanging(string value);
    partial void OnCUSTOMER_EMAILChanged();
    partial void OnSTATUS_IDChanging(int value);
    partial void OnSTATUS_IDChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._DELIVERY_CHALANs = new EntitySet<DELIVERY_CHALAN>(new Action<DELIVERY_CHALAN>(this.attach_DELIVERY_CHALANs), new Action<DELIVERY_CHALAN>(this.detach_DELIVERY_CHALANs));
			this._SALES_INVOICEs = new EntitySet<SALES_INVOICE>(new Action<SALES_INVOICE>(this.attach_SALES_INVOICEs), new Action<SALES_INVOICE>(this.detach_SALES_INVOICEs));
			this._VILLAGE = default(EntityRef<VILLAGE>);
			this._MASTER = default(EntityRef<MASTER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CUSTOMER_ID
		{
			get
			{
				return this._CUSTOMER_ID;
			}
			set
			{
				if ((this._CUSTOMER_ID != value))
				{
					this.OnCUSTOMER_IDChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_ID = value;
					this.SendPropertyChanged("CUSTOMER_ID");
					this.OnCUSTOMER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VILLAGE_ID", DbType="Int NOT NULL")]
		public int VILLAGE_ID
		{
			get
			{
				return this._VILLAGE_ID;
			}
			set
			{
				if ((this._VILLAGE_ID != value))
				{
					if (this._VILLAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVILLAGE_IDChanging(value);
					this.SendPropertyChanging();
					this._VILLAGE_ID = value;
					this.SendPropertyChanged("VILLAGE_ID");
					this.OnVILLAGE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this.OnCUSTOMER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_NAME = value;
					this.SendPropertyChanged("CUSTOMER_NAME");
					this.OnCUSTOMER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_NO_1", DbType="BigInt NOT NULL")]
		public long CONTACT_NO_1
		{
			get
			{
				return this._CONTACT_NO_1;
			}
			set
			{
				if ((this._CONTACT_NO_1 != value))
				{
					this.OnCONTACT_NO_1Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_NO_1 = value;
					this.SendPropertyChanged("CONTACT_NO_1");
					this.OnCONTACT_NO_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_NO_2", DbType="BigInt")]
		public System.Nullable<long> CONTACT_NO_2
		{
			get
			{
				return this._CONTACT_NO_2;
			}
			set
			{
				if ((this._CONTACT_NO_2 != value))
				{
					this.OnCONTACT_NO_2Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_NO_2 = value;
					this.SendPropertyChanged("CONTACT_NO_2");
					this.OnCONTACT_NO_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_ADDRESS", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_ADDRESS
		{
			get
			{
				return this._CUSTOMER_ADDRESS;
			}
			set
			{
				if ((this._CUSTOMER_ADDRESS != value))
				{
					this.OnCUSTOMER_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_ADDRESS = value;
					this.SendPropertyChanged("CUSTOMER_ADDRESS");
					this.OnCUSTOMER_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_EMAIL", DbType="VarChar(50)")]
		public string CUSTOMER_EMAIL
		{
			get
			{
				return this._CUSTOMER_EMAIL;
			}
			set
			{
				if ((this._CUSTOMER_EMAIL != value))
				{
					this.OnCUSTOMER_EMAILChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_EMAIL = value;
					this.SendPropertyChanged("CUSTOMER_EMAIL");
					this.OnCUSTOMER_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS_ID", DbType="Int NOT NULL")]
		public int STATUS_ID
		{
			get
			{
				return this._STATUS_ID;
			}
			set
			{
				if ((this._STATUS_ID != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._STATUS_ID = value;
					this.SendPropertyChanged("STATUS_ID");
					this.OnSTATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_DELIVERY_CHALAN", Storage="_DELIVERY_CHALANs", ThisKey="CUSTOMER_ID", OtherKey="CUSTOMER_ID")]
		public EntitySet<DELIVERY_CHALAN> DELIVERY_CHALANs
		{
			get
			{
				return this._DELIVERY_CHALANs;
			}
			set
			{
				this._DELIVERY_CHALANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_SALES_INVOICE", Storage="_SALES_INVOICEs", ThisKey="CUSTOMER_ID", OtherKey="CUSTOMER_ID")]
		public EntitySet<SALES_INVOICE> SALES_INVOICEs
		{
			get
			{
				return this._SALES_INVOICEs;
			}
			set
			{
				this._SALES_INVOICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VILLAGE_CUSTOMER", Storage="_VILLAGE", ThisKey="VILLAGE_ID", OtherKey="VILLAGE_ID", IsForeignKey=true)]
		public VILLAGE VILLAGE
		{
			get
			{
				return this._VILLAGE.Entity;
			}
			set
			{
				VILLAGE previousValue = this._VILLAGE.Entity;
				if (((previousValue != value) 
							|| (this._VILLAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VILLAGE.Entity = null;
						previousValue.CUSTOMERs.Remove(this);
					}
					this._VILLAGE.Entity = value;
					if ((value != null))
					{
						value.CUSTOMERs.Add(this);
						this._VILLAGE_ID = value.VILLAGE_ID;
					}
					else
					{
						this._VILLAGE_ID = default(int);
					}
					this.SendPropertyChanged("VILLAGE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_CUSTOMER", Storage="_MASTER", ThisKey="STATUS_ID", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.CUSTOMERs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.CUSTOMERs.Add(this);
						this._STATUS_ID = value.MASTER_ID;
					}
					else
					{
						this._STATUS_ID = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DELIVERY_CHALANs(DELIVERY_CHALAN entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_DELIVERY_CHALANs(DELIVERY_CHALAN entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
		
		private void attach_SALES_INVOICEs(SALES_INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_SALES_INVOICEs(SALES_INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DELIVERY_CHALAN")]
	public partial class DELIVERY_CHALAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DC_ID;
		
		private string _DC_NO;
		
		private int _TRACTOR_ID;
		
		private System.Nullable<int> _SALES_INVOICE_ID;
		
		private System.DateTime _DC_DATE;
		
		private string _HYPOTHETICATION;
		
		private bool _IS_DC;
		
		private int _CUSTOMER_ID;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
		private EntityRef<SALES_INVOICE> _SALES_INVOICE;
		
		private EntityRef<TRACTOR_PURCHASE> _TRACTOR_PURCHASE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDC_IDChanging(int value);
    partial void OnDC_IDChanged();
    partial void OnDC_NOChanging(string value);
    partial void OnDC_NOChanged();
    partial void OnTRACTOR_IDChanging(int value);
    partial void OnTRACTOR_IDChanged();
    partial void OnSALES_INVOICE_IDChanging(System.Nullable<int> value);
    partial void OnSALES_INVOICE_IDChanged();
    partial void OnDC_DATEChanging(System.DateTime value);
    partial void OnDC_DATEChanged();
    partial void OnHYPOTHETICATIONChanging(string value);
    partial void OnHYPOTHETICATIONChanged();
    partial void OnIS_DCChanging(bool value);
    partial void OnIS_DCChanged();
    partial void OnCUSTOMER_IDChanging(int value);
    partial void OnCUSTOMER_IDChanged();
    #endregion
		
		public DELIVERY_CHALAN()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			this._SALES_INVOICE = default(EntityRef<SALES_INVOICE>);
			this._TRACTOR_PURCHASE = default(EntityRef<TRACTOR_PURCHASE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DC_ID
		{
			get
			{
				return this._DC_ID;
			}
			set
			{
				if ((this._DC_ID != value))
				{
					this.OnDC_IDChanging(value);
					this.SendPropertyChanging();
					this._DC_ID = value;
					this.SendPropertyChanged("DC_ID");
					this.OnDC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_NO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DC_NO
		{
			get
			{
				return this._DC_NO;
			}
			set
			{
				if ((this._DC_NO != value))
				{
					this.OnDC_NOChanging(value);
					this.SendPropertyChanging();
					this._DC_NO = value;
					this.SendPropertyChanged("DC_NO");
					this.OnDC_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_ID", DbType="Int NOT NULL")]
		public int TRACTOR_ID
		{
			get
			{
				return this._TRACTOR_ID;
			}
			set
			{
				if ((this._TRACTOR_ID != value))
				{
					if (this._TRACTOR_PURCHASE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRACTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_ID = value;
					this.SendPropertyChanged("TRACTOR_ID");
					this.OnTRACTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALES_INVOICE_ID", DbType="Int")]
		public System.Nullable<int> SALES_INVOICE_ID
		{
			get
			{
				return this._SALES_INVOICE_ID;
			}
			set
			{
				if ((this._SALES_INVOICE_ID != value))
				{
					if (this._SALES_INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSALES_INVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._SALES_INVOICE_ID = value;
					this.SendPropertyChanged("SALES_INVOICE_ID");
					this.OnSALES_INVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime DC_DATE
		{
			get
			{
				return this._DC_DATE;
			}
			set
			{
				if ((this._DC_DATE != value))
				{
					this.OnDC_DATEChanging(value);
					this.SendPropertyChanging();
					this._DC_DATE = value;
					this.SendPropertyChanged("DC_DATE");
					this.OnDC_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HYPOTHETICATION", DbType="VarChar(50)")]
		public string HYPOTHETICATION
		{
			get
			{
				return this._HYPOTHETICATION;
			}
			set
			{
				if ((this._HYPOTHETICATION != value))
				{
					this.OnHYPOTHETICATIONChanging(value);
					this.SendPropertyChanging();
					this._HYPOTHETICATION = value;
					this.SendPropertyChanged("HYPOTHETICATION");
					this.OnHYPOTHETICATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_DC", DbType="Bit NOT NULL")]
		public bool IS_DC
		{
			get
			{
				return this._IS_DC;
			}
			set
			{
				if ((this._IS_DC != value))
				{
					this.OnIS_DCChanging(value);
					this.SendPropertyChanging();
					this._IS_DC = value;
					this.SendPropertyChanged("IS_DC");
					this.OnIS_DCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_ID", DbType="Int NOT NULL")]
		public int CUSTOMER_ID
		{
			get
			{
				return this._CUSTOMER_ID;
			}
			set
			{
				if ((this._CUSTOMER_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUSTOMER_IDChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_ID = value;
					this.SendPropertyChanged("CUSTOMER_ID");
					this.OnCUSTOMER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_DELIVERY_CHALAN", Storage="_CUSTOMER", ThisKey="CUSTOMER_ID", OtherKey="CUSTOMER_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.DELIVERY_CHALANs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.DELIVERY_CHALANs.Add(this);
						this._CUSTOMER_ID = value.CUSTOMER_ID;
					}
					else
					{
						this._CUSTOMER_ID = default(int);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_DELIVERY_CHALAN", Storage="_SALES_INVOICE", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID", IsForeignKey=true)]
		public SALES_INVOICE SALES_INVOICE
		{
			get
			{
				return this._SALES_INVOICE.Entity;
			}
			set
			{
				SALES_INVOICE previousValue = this._SALES_INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._SALES_INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_INVOICE.Entity = null;
						previousValue.DELIVERY_CHALANs.Remove(this);
					}
					this._SALES_INVOICE.Entity = value;
					if ((value != null))
					{
						value.DELIVERY_CHALANs.Add(this);
						this._SALES_INVOICE_ID = value.SALES_INVOICE_ID;
					}
					else
					{
						this._SALES_INVOICE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_INVOICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_PURCHASE_DELIVERY_CHALAN", Storage="_TRACTOR_PURCHASE", ThisKey="TRACTOR_ID", OtherKey="TRACTOR_ID", IsForeignKey=true)]
		public TRACTOR_PURCHASE TRACTOR_PURCHASE
		{
			get
			{
				return this._TRACTOR_PURCHASE.Entity;
			}
			set
			{
				TRACTOR_PURCHASE previousValue = this._TRACTOR_PURCHASE.Entity;
				if (((previousValue != value) 
							|| (this._TRACTOR_PURCHASE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRACTOR_PURCHASE.Entity = null;
						previousValue.DELIVERY_CHALANs.Remove(this);
					}
					this._TRACTOR_PURCHASE.Entity = value;
					if ((value != null))
					{
						value.DELIVERY_CHALANs.Add(this);
						this._TRACTOR_ID = value.TRACTOR_ID;
					}
					else
					{
						this._TRACTOR_ID = default(int);
					}
					this.SendPropertyChanged("TRACTOR_PURCHASE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISTRICTS")]
	public partial class DISTRICT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DISTRICT_ID;
		
		private string _DISTRICT_NAME;
		
		private EntitySet<TALUK> _TALUKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDISTRICT_IDChanging(int value);
    partial void OnDISTRICT_IDChanged();
    partial void OnDISTRICT_NAMEChanging(string value);
    partial void OnDISTRICT_NAMEChanged();
    #endregion
		
		public DISTRICT()
		{
			this._TALUKs = new EntitySet<TALUK>(new Action<TALUK>(this.attach_TALUKs), new Action<TALUK>(this.detach_TALUKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISTRICT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DISTRICT_ID
		{
			get
			{
				return this._DISTRICT_ID;
			}
			set
			{
				if ((this._DISTRICT_ID != value))
				{
					this.OnDISTRICT_IDChanging(value);
					this.SendPropertyChanging();
					this._DISTRICT_ID = value;
					this.SendPropertyChanged("DISTRICT_ID");
					this.OnDISTRICT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISTRICT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DISTRICT_NAME
		{
			get
			{
				return this._DISTRICT_NAME;
			}
			set
			{
				if ((this._DISTRICT_NAME != value))
				{
					this.OnDISTRICT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._DISTRICT_NAME = value;
					this.SendPropertyChanged("DISTRICT_NAME");
					this.OnDISTRICT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISTRICT_TALUK", Storage="_TALUKs", ThisKey="DISTRICT_ID", OtherKey="DISTRICT_ID")]
		public EntitySet<TALUK> TALUKs
		{
			get
			{
				return this._TALUKs;
			}
			set
			{
				this._TALUKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TALUKs(TALUK entity)
		{
			this.SendPropertyChanging();
			entity.DISTRICT = this;
		}
		
		private void detach_TALUKs(TALUK entity)
		{
			this.SendPropertyChanging();
			entity.DISTRICT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICE")]
	public partial class INVOICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INVOICE_ID;
		
		private string _INVOICE_NO;
		
		private System.DateTime _INVOICE_DATE;
		
		private decimal _INVOICE_DISCOUNT;
		
		private decimal _INVOICE_VAT_PERCENT;
		
		private decimal _INVOICE_GRANDTOTAL;
		
		private System.Nullable<decimal> _EXPENDITURE_ON_SUBTOAL;
		
		private int _PURCHASE_TYPE;
		
		private EntitySet<SPARE_PURCHASES_SALE> _SPARE_PURCHASES_SALEs;
		
		private EntitySet<TRACTOR_PURCHASE> _TRACTOR_PURCHASEs;
		
		private EntityRef<MASTER> _MASTER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINVOICE_IDChanging(int value);
    partial void OnINVOICE_IDChanged();
    partial void OnINVOICE_NOChanging(string value);
    partial void OnINVOICE_NOChanged();
    partial void OnINVOICE_DATEChanging(System.DateTime value);
    partial void OnINVOICE_DATEChanged();
    partial void OnINVOICE_DISCOUNTChanging(decimal value);
    partial void OnINVOICE_DISCOUNTChanged();
    partial void OnINVOICE_VAT_PERCENTChanging(decimal value);
    partial void OnINVOICE_VAT_PERCENTChanged();
    partial void OnINVOICE_GRANDTOTALChanging(decimal value);
    partial void OnINVOICE_GRANDTOTALChanged();
    partial void OnEXPENDITURE_ON_SUBTOALChanging(System.Nullable<decimal> value);
    partial void OnEXPENDITURE_ON_SUBTOALChanged();
    partial void OnPURCHASE_TYPEChanging(int value);
    partial void OnPURCHASE_TYPEChanged();
    #endregion
		
		public INVOICE()
		{
			this._SPARE_PURCHASES_SALEs = new EntitySet<SPARE_PURCHASES_SALE>(new Action<SPARE_PURCHASES_SALE>(this.attach_SPARE_PURCHASES_SALEs), new Action<SPARE_PURCHASES_SALE>(this.detach_SPARE_PURCHASES_SALEs));
			this._TRACTOR_PURCHASEs = new EntitySet<TRACTOR_PURCHASE>(new Action<TRACTOR_PURCHASE>(this.attach_TRACTOR_PURCHASEs), new Action<TRACTOR_PURCHASE>(this.detach_TRACTOR_PURCHASEs));
			this._MASTER = default(EntityRef<MASTER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int INVOICE_ID
		{
			get
			{
				return this._INVOICE_ID;
			}
			set
			{
				if ((this._INVOICE_ID != value))
				{
					this.OnINVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_ID = value;
					this.SendPropertyChanged("INVOICE_ID");
					this.OnINVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_NO", DbType="VarChar(50)")]
		public string INVOICE_NO
		{
			get
			{
				return this._INVOICE_NO;
			}
			set
			{
				if ((this._INVOICE_NO != value))
				{
					this.OnINVOICE_NOChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_NO = value;
					this.SendPropertyChanged("INVOICE_NO");
					this.OnINVOICE_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime INVOICE_DATE
		{
			get
			{
				return this._INVOICE_DATE;
			}
			set
			{
				if ((this._INVOICE_DATE != value))
				{
					this.OnINVOICE_DATEChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_DATE = value;
					this.SendPropertyChanged("INVOICE_DATE");
					this.OnINVOICE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_DISCOUNT", DbType="Decimal(18,2) NOT NULL")]
		public decimal INVOICE_DISCOUNT
		{
			get
			{
				return this._INVOICE_DISCOUNT;
			}
			set
			{
				if ((this._INVOICE_DISCOUNT != value))
				{
					this.OnINVOICE_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_DISCOUNT = value;
					this.SendPropertyChanged("INVOICE_DISCOUNT");
					this.OnINVOICE_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_VAT_PERCENT", DbType="Decimal(18,2) NOT NULL")]
		public decimal INVOICE_VAT_PERCENT
		{
			get
			{
				return this._INVOICE_VAT_PERCENT;
			}
			set
			{
				if ((this._INVOICE_VAT_PERCENT != value))
				{
					this.OnINVOICE_VAT_PERCENTChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_VAT_PERCENT = value;
					this.SendPropertyChanged("INVOICE_VAT_PERCENT");
					this.OnINVOICE_VAT_PERCENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_GRANDTOTAL", DbType="Decimal(18,2) NOT NULL")]
		public decimal INVOICE_GRANDTOTAL
		{
			get
			{
				return this._INVOICE_GRANDTOTAL;
			}
			set
			{
				if ((this._INVOICE_GRANDTOTAL != value))
				{
					this.OnINVOICE_GRANDTOTALChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_GRANDTOTAL = value;
					this.SendPropertyChanged("INVOICE_GRANDTOTAL");
					this.OnINVOICE_GRANDTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPENDITURE_ON_SUBTOAL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EXPENDITURE_ON_SUBTOAL
		{
			get
			{
				return this._EXPENDITURE_ON_SUBTOAL;
			}
			set
			{
				if ((this._EXPENDITURE_ON_SUBTOAL != value))
				{
					this.OnEXPENDITURE_ON_SUBTOALChanging(value);
					this.SendPropertyChanging();
					this._EXPENDITURE_ON_SUBTOAL = value;
					this.SendPropertyChanged("EXPENDITURE_ON_SUBTOAL");
					this.OnEXPENDITURE_ON_SUBTOALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PURCHASE_TYPE", DbType="Int NOT NULL")]
		public int PURCHASE_TYPE
		{
			get
			{
				return this._PURCHASE_TYPE;
			}
			set
			{
				if ((this._PURCHASE_TYPE != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPURCHASE_TYPEChanging(value);
					this.SendPropertyChanging();
					this._PURCHASE_TYPE = value;
					this.SendPropertyChanged("PURCHASE_TYPE");
					this.OnPURCHASE_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_SPARE_PURCHASES_SALE", Storage="_SPARE_PURCHASES_SALEs", ThisKey="INVOICE_ID", OtherKey="INVOICE_ID")]
		public EntitySet<SPARE_PURCHASES_SALE> SPARE_PURCHASES_SALEs
		{
			get
			{
				return this._SPARE_PURCHASES_SALEs;
			}
			set
			{
				this._SPARE_PURCHASES_SALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_TRACTOR_PURCHASE", Storage="_TRACTOR_PURCHASEs", ThisKey="INVOICE_ID", OtherKey="INVOICE_ID")]
		public EntitySet<TRACTOR_PURCHASE> TRACTOR_PURCHASEs
		{
			get
			{
				return this._TRACTOR_PURCHASEs;
			}
			set
			{
				this._TRACTOR_PURCHASEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_INVOICE", Storage="_MASTER", ThisKey="PURCHASE_TYPE", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.INVOICEs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.INVOICEs.Add(this);
						this._PURCHASE_TYPE = value.MASTER_ID;
					}
					else
					{
						this._PURCHASE_TYPE = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = this;
		}
		
		private void detach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = null;
		}
		
		private void attach_TRACTOR_PURCHASEs(TRACTOR_PURCHASE entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = this;
		}
		
		private void detach_TRACTOR_PURCHASEs(TRACTOR_PURCHASE entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOB_CARDS")]
	public partial class JOB_CARD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JOBCARD_ID;
		
		private int _TRACTOR_ID;
		
		private int _SALES_INVOICE_ID;
		
		private System.Nullable<bool> _IS_MOBILESERVICE;
		
		private System.Nullable<bool> _IS_SERVICECLINIC;
		
		private System.Nullable<bool> _IS_PAID;
		
		private System.Nullable<bool> _IS_ACCEDENTAL;
		
		private System.Nullable<int> _SERIAL_NUMBER;
		
		private System.Nullable<decimal> _ESTIMATED_COST;
		
		private string _REPEAT_FIR_DETAIL;
		
		private System.Nullable<int> _SERVICE_COUPON_NO;
		
		private System.Nullable<System.DateTime> _ESTIMATED_DELIVERY;
		
		private System.Nullable<System.DateTime> _DATETIME_IN;
		
		private System.Nullable<System.DateTime> _SERVICE_STARTDATETIME;
		
		private System.Nullable<System.DateTime> _SERVICE_ENDDATETIME;
		
		private string _TRACTOR_APPLICATION;
		
		private EntitySet<JOB_COMPLAINT> _JOB_COMPLAINTs;
		
		private EntitySet<JOB_TRACTOR_CUSTOMER> _JOB_TRACTOR_CUSTOMERs;
		
		private EntitySet<SERVICE_CHARGE> _SERVICE_CHARGEs;
		
		private EntityRef<SALES_INVOICE> _SALES_INVOICE;
		
		private EntityRef<TRACTOR_PURCHASE> _TRACTOR_PURCHASE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOBCARD_IDChanging(int value);
    partial void OnJOBCARD_IDChanged();
    partial void OnTRACTOR_IDChanging(int value);
    partial void OnTRACTOR_IDChanged();
    partial void OnSALES_INVOICE_IDChanging(int value);
    partial void OnSALES_INVOICE_IDChanged();
    partial void OnIS_MOBILESERVICEChanging(System.Nullable<bool> value);
    partial void OnIS_MOBILESERVICEChanged();
    partial void OnIS_SERVICECLINICChanging(System.Nullable<bool> value);
    partial void OnIS_SERVICECLINICChanged();
    partial void OnIS_PAIDChanging(System.Nullable<bool> value);
    partial void OnIS_PAIDChanged();
    partial void OnIS_ACCEDENTALChanging(System.Nullable<bool> value);
    partial void OnIS_ACCEDENTALChanged();
    partial void OnSERIAL_NUMBERChanging(System.Nullable<int> value);
    partial void OnSERIAL_NUMBERChanged();
    partial void OnESTIMATED_COSTChanging(System.Nullable<decimal> value);
    partial void OnESTIMATED_COSTChanged();
    partial void OnREPEAT_FIR_DETAILChanging(string value);
    partial void OnREPEAT_FIR_DETAILChanged();
    partial void OnSERVICE_COUPON_NOChanging(System.Nullable<int> value);
    partial void OnSERVICE_COUPON_NOChanged();
    partial void OnESTIMATED_DELIVERYChanging(System.Nullable<System.DateTime> value);
    partial void OnESTIMATED_DELIVERYChanged();
    partial void OnDATETIME_INChanging(System.Nullable<System.DateTime> value);
    partial void OnDATETIME_INChanged();
    partial void OnSERVICE_STARTDATETIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnSERVICE_STARTDATETIMEChanged();
    partial void OnSERVICE_ENDDATETIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnSERVICE_ENDDATETIMEChanged();
    partial void OnTRACTOR_APPLICATIONChanging(string value);
    partial void OnTRACTOR_APPLICATIONChanged();
    #endregion
		
		public JOB_CARD()
		{
			this._JOB_COMPLAINTs = new EntitySet<JOB_COMPLAINT>(new Action<JOB_COMPLAINT>(this.attach_JOB_COMPLAINTs), new Action<JOB_COMPLAINT>(this.detach_JOB_COMPLAINTs));
			this._JOB_TRACTOR_CUSTOMERs = new EntitySet<JOB_TRACTOR_CUSTOMER>(new Action<JOB_TRACTOR_CUSTOMER>(this.attach_JOB_TRACTOR_CUSTOMERs), new Action<JOB_TRACTOR_CUSTOMER>(this.detach_JOB_TRACTOR_CUSTOMERs));
			this._SERVICE_CHARGEs = new EntitySet<SERVICE_CHARGE>(new Action<SERVICE_CHARGE>(this.attach_SERVICE_CHARGEs), new Action<SERVICE_CHARGE>(this.detach_SERVICE_CHARGEs));
			this._SALES_INVOICE = default(EntityRef<SALES_INVOICE>);
			this._TRACTOR_PURCHASE = default(EntityRef<TRACTOR_PURCHASE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOBCARD_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int JOBCARD_ID
		{
			get
			{
				return this._JOBCARD_ID;
			}
			set
			{
				if ((this._JOBCARD_ID != value))
				{
					this.OnJOBCARD_IDChanging(value);
					this.SendPropertyChanging();
					this._JOBCARD_ID = value;
					this.SendPropertyChanged("JOBCARD_ID");
					this.OnJOBCARD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_ID", DbType="Int NOT NULL")]
		public int TRACTOR_ID
		{
			get
			{
				return this._TRACTOR_ID;
			}
			set
			{
				if ((this._TRACTOR_ID != value))
				{
					if (this._TRACTOR_PURCHASE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRACTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_ID = value;
					this.SendPropertyChanged("TRACTOR_ID");
					this.OnTRACTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALES_INVOICE_ID", DbType="Int NOT NULL")]
		public int SALES_INVOICE_ID
		{
			get
			{
				return this._SALES_INVOICE_ID;
			}
			set
			{
				if ((this._SALES_INVOICE_ID != value))
				{
					if (this._SALES_INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSALES_INVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._SALES_INVOICE_ID = value;
					this.SendPropertyChanged("SALES_INVOICE_ID");
					this.OnSALES_INVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_MOBILESERVICE", DbType="Bit")]
		public System.Nullable<bool> IS_MOBILESERVICE
		{
			get
			{
				return this._IS_MOBILESERVICE;
			}
			set
			{
				if ((this._IS_MOBILESERVICE != value))
				{
					this.OnIS_MOBILESERVICEChanging(value);
					this.SendPropertyChanging();
					this._IS_MOBILESERVICE = value;
					this.SendPropertyChanged("IS_MOBILESERVICE");
					this.OnIS_MOBILESERVICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_SERVICECLINIC", DbType="Bit")]
		public System.Nullable<bool> IS_SERVICECLINIC
		{
			get
			{
				return this._IS_SERVICECLINIC;
			}
			set
			{
				if ((this._IS_SERVICECLINIC != value))
				{
					this.OnIS_SERVICECLINICChanging(value);
					this.SendPropertyChanging();
					this._IS_SERVICECLINIC = value;
					this.SendPropertyChanged("IS_SERVICECLINIC");
					this.OnIS_SERVICECLINICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_PAID", DbType="Bit")]
		public System.Nullable<bool> IS_PAID
		{
			get
			{
				return this._IS_PAID;
			}
			set
			{
				if ((this._IS_PAID != value))
				{
					this.OnIS_PAIDChanging(value);
					this.SendPropertyChanging();
					this._IS_PAID = value;
					this.SendPropertyChanged("IS_PAID");
					this.OnIS_PAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ACCEDENTAL", DbType="Bit")]
		public System.Nullable<bool> IS_ACCEDENTAL
		{
			get
			{
				return this._IS_ACCEDENTAL;
			}
			set
			{
				if ((this._IS_ACCEDENTAL != value))
				{
					this.OnIS_ACCEDENTALChanging(value);
					this.SendPropertyChanging();
					this._IS_ACCEDENTAL = value;
					this.SendPropertyChanged("IS_ACCEDENTAL");
					this.OnIS_ACCEDENTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIAL_NUMBER", DbType="Int")]
		public System.Nullable<int> SERIAL_NUMBER
		{
			get
			{
				return this._SERIAL_NUMBER;
			}
			set
			{
				if ((this._SERIAL_NUMBER != value))
				{
					this.OnSERIAL_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._SERIAL_NUMBER = value;
					this.SendPropertyChanged("SERIAL_NUMBER");
					this.OnSERIAL_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ESTIMATED_COST
		{
			get
			{
				return this._ESTIMATED_COST;
			}
			set
			{
				if ((this._ESTIMATED_COST != value))
				{
					this.OnESTIMATED_COSTChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_COST = value;
					this.SendPropertyChanged("ESTIMATED_COST");
					this.OnESTIMATED_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REPEAT_FIR_DETAIL", DbType="VarChar(50)")]
		public string REPEAT_FIR_DETAIL
		{
			get
			{
				return this._REPEAT_FIR_DETAIL;
			}
			set
			{
				if ((this._REPEAT_FIR_DETAIL != value))
				{
					this.OnREPEAT_FIR_DETAILChanging(value);
					this.SendPropertyChanging();
					this._REPEAT_FIR_DETAIL = value;
					this.SendPropertyChanged("REPEAT_FIR_DETAIL");
					this.OnREPEAT_FIR_DETAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERVICE_COUPON_NO", DbType="Int")]
		public System.Nullable<int> SERVICE_COUPON_NO
		{
			get
			{
				return this._SERVICE_COUPON_NO;
			}
			set
			{
				if ((this._SERVICE_COUPON_NO != value))
				{
					this.OnSERVICE_COUPON_NOChanging(value);
					this.SendPropertyChanging();
					this._SERVICE_COUPON_NO = value;
					this.SendPropertyChanged("SERVICE_COUPON_NO");
					this.OnSERVICE_COUPON_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_DELIVERY", DbType="DateTime")]
		public System.Nullable<System.DateTime> ESTIMATED_DELIVERY
		{
			get
			{
				return this._ESTIMATED_DELIVERY;
			}
			set
			{
				if ((this._ESTIMATED_DELIVERY != value))
				{
					this.OnESTIMATED_DELIVERYChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_DELIVERY = value;
					this.SendPropertyChanged("ESTIMATED_DELIVERY");
					this.OnESTIMATED_DELIVERYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATETIME_IN", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATETIME_IN
		{
			get
			{
				return this._DATETIME_IN;
			}
			set
			{
				if ((this._DATETIME_IN != value))
				{
					this.OnDATETIME_INChanging(value);
					this.SendPropertyChanging();
					this._DATETIME_IN = value;
					this.SendPropertyChanged("DATETIME_IN");
					this.OnDATETIME_INChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERVICE_STARTDATETIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> SERVICE_STARTDATETIME
		{
			get
			{
				return this._SERVICE_STARTDATETIME;
			}
			set
			{
				if ((this._SERVICE_STARTDATETIME != value))
				{
					this.OnSERVICE_STARTDATETIMEChanging(value);
					this.SendPropertyChanging();
					this._SERVICE_STARTDATETIME = value;
					this.SendPropertyChanged("SERVICE_STARTDATETIME");
					this.OnSERVICE_STARTDATETIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERVICE_ENDDATETIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> SERVICE_ENDDATETIME
		{
			get
			{
				return this._SERVICE_ENDDATETIME;
			}
			set
			{
				if ((this._SERVICE_ENDDATETIME != value))
				{
					this.OnSERVICE_ENDDATETIMEChanging(value);
					this.SendPropertyChanging();
					this._SERVICE_ENDDATETIME = value;
					this.SendPropertyChanged("SERVICE_ENDDATETIME");
					this.OnSERVICE_ENDDATETIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_APPLICATION", DbType="VarChar(50)")]
		public string TRACTOR_APPLICATION
		{
			get
			{
				return this._TRACTOR_APPLICATION;
			}
			set
			{
				if ((this._TRACTOR_APPLICATION != value))
				{
					this.OnTRACTOR_APPLICATIONChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_APPLICATION = value;
					this.SendPropertyChanged("TRACTOR_APPLICATION");
					this.OnTRACTOR_APPLICATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_CARD_JOB_COMPLAINT", Storage="_JOB_COMPLAINTs", ThisKey="JOBCARD_ID", OtherKey="JOBCARD_ID")]
		public EntitySet<JOB_COMPLAINT> JOB_COMPLAINTs
		{
			get
			{
				return this._JOB_COMPLAINTs;
			}
			set
			{
				this._JOB_COMPLAINTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_CARD_JOB_TRACTOR_CUSTOMER", Storage="_JOB_TRACTOR_CUSTOMERs", ThisKey="JOBCARD_ID", OtherKey="JOBCARD_ID")]
		public EntitySet<JOB_TRACTOR_CUSTOMER> JOB_TRACTOR_CUSTOMERs
		{
			get
			{
				return this._JOB_TRACTOR_CUSTOMERs;
			}
			set
			{
				this._JOB_TRACTOR_CUSTOMERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_CARD_SERVICE_CHARGE", Storage="_SERVICE_CHARGEs", ThisKey="JOBCARD_ID", OtherKey="JOBCARD_ID")]
		public EntitySet<SERVICE_CHARGE> SERVICE_CHARGEs
		{
			get
			{
				return this._SERVICE_CHARGEs;
			}
			set
			{
				this._SERVICE_CHARGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_JOB_CARD", Storage="_SALES_INVOICE", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID", IsForeignKey=true)]
		public SALES_INVOICE SALES_INVOICE
		{
			get
			{
				return this._SALES_INVOICE.Entity;
			}
			set
			{
				SALES_INVOICE previousValue = this._SALES_INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._SALES_INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_INVOICE.Entity = null;
						previousValue.JOB_CARDs.Remove(this);
					}
					this._SALES_INVOICE.Entity = value;
					if ((value != null))
					{
						value.JOB_CARDs.Add(this);
						this._SALES_INVOICE_ID = value.SALES_INVOICE_ID;
					}
					else
					{
						this._SALES_INVOICE_ID = default(int);
					}
					this.SendPropertyChanged("SALES_INVOICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_PURCHASE_JOB_CARD", Storage="_TRACTOR_PURCHASE", ThisKey="TRACTOR_ID", OtherKey="TRACTOR_ID", IsForeignKey=true)]
		public TRACTOR_PURCHASE TRACTOR_PURCHASE
		{
			get
			{
				return this._TRACTOR_PURCHASE.Entity;
			}
			set
			{
				TRACTOR_PURCHASE previousValue = this._TRACTOR_PURCHASE.Entity;
				if (((previousValue != value) 
							|| (this._TRACTOR_PURCHASE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRACTOR_PURCHASE.Entity = null;
						previousValue.JOB_CARDs.Remove(this);
					}
					this._TRACTOR_PURCHASE.Entity = value;
					if ((value != null))
					{
						value.JOB_CARDs.Add(this);
						this._TRACTOR_ID = value.TRACTOR_ID;
					}
					else
					{
						this._TRACTOR_ID = default(int);
					}
					this.SendPropertyChanged("TRACTOR_PURCHASE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JOB_COMPLAINTs(JOB_COMPLAINT entity)
		{
			this.SendPropertyChanging();
			entity.JOB_CARD = this;
		}
		
		private void detach_JOB_COMPLAINTs(JOB_COMPLAINT entity)
		{
			this.SendPropertyChanging();
			entity.JOB_CARD = null;
		}
		
		private void attach_JOB_TRACTOR_CUSTOMERs(JOB_TRACTOR_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.JOB_CARD = this;
		}
		
		private void detach_JOB_TRACTOR_CUSTOMERs(JOB_TRACTOR_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.JOB_CARD = null;
		}
		
		private void attach_SERVICE_CHARGEs(SERVICE_CHARGE entity)
		{
			this.SendPropertyChanging();
			entity.JOB_CARD = this;
		}
		
		private void detach_SERVICE_CHARGEs(SERVICE_CHARGE entity)
		{
			this.SendPropertyChanging();
			entity.JOB_CARD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOB_COMPLAINTS")]
	public partial class JOB_COMPLAINT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COMPLAINT_ID;
		
		private System.Nullable<int> _JOBCARD_ID;
		
		private string _ACTUAL_COMPLAINT;
		
		private string _ACTION_TAKEN;
		
		private System.Nullable<decimal> _LABOUR_CHARGES;
		
		private EntityRef<JOB_CARD> _JOB_CARD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOMPLAINT_IDChanging(int value);
    partial void OnCOMPLAINT_IDChanged();
    partial void OnJOBCARD_IDChanging(System.Nullable<int> value);
    partial void OnJOBCARD_IDChanged();
    partial void OnACTUAL_COMPLAINTChanging(string value);
    partial void OnACTUAL_COMPLAINTChanged();
    partial void OnACTION_TAKENChanging(string value);
    partial void OnACTION_TAKENChanged();
    partial void OnLABOUR_CHARGESChanging(System.Nullable<decimal> value);
    partial void OnLABOUR_CHARGESChanged();
    #endregion
		
		public JOB_COMPLAINT()
		{
			this._JOB_CARD = default(EntityRef<JOB_CARD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPLAINT_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COMPLAINT_ID
		{
			get
			{
				return this._COMPLAINT_ID;
			}
			set
			{
				if ((this._COMPLAINT_ID != value))
				{
					this.OnCOMPLAINT_IDChanging(value);
					this.SendPropertyChanging();
					this._COMPLAINT_ID = value;
					this.SendPropertyChanged("COMPLAINT_ID");
					this.OnCOMPLAINT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOBCARD_ID", DbType="Int")]
		public System.Nullable<int> JOBCARD_ID
		{
			get
			{
				return this._JOBCARD_ID;
			}
			set
			{
				if ((this._JOBCARD_ID != value))
				{
					if (this._JOB_CARD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOBCARD_IDChanging(value);
					this.SendPropertyChanging();
					this._JOBCARD_ID = value;
					this.SendPropertyChanged("JOBCARD_ID");
					this.OnJOBCARD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTUAL_COMPLAINT", DbType="VarChar(MAX)")]
		public string ACTUAL_COMPLAINT
		{
			get
			{
				return this._ACTUAL_COMPLAINT;
			}
			set
			{
				if ((this._ACTUAL_COMPLAINT != value))
				{
					this.OnACTUAL_COMPLAINTChanging(value);
					this.SendPropertyChanging();
					this._ACTUAL_COMPLAINT = value;
					this.SendPropertyChanged("ACTUAL_COMPLAINT");
					this.OnACTUAL_COMPLAINTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTION_TAKEN", DbType="VarChar(MAX)")]
		public string ACTION_TAKEN
		{
			get
			{
				return this._ACTION_TAKEN;
			}
			set
			{
				if ((this._ACTION_TAKEN != value))
				{
					this.OnACTION_TAKENChanging(value);
					this.SendPropertyChanging();
					this._ACTION_TAKEN = value;
					this.SendPropertyChanged("ACTION_TAKEN");
					this.OnACTION_TAKENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LABOUR_CHARGES", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LABOUR_CHARGES
		{
			get
			{
				return this._LABOUR_CHARGES;
			}
			set
			{
				if ((this._LABOUR_CHARGES != value))
				{
					this.OnLABOUR_CHARGESChanging(value);
					this.SendPropertyChanging();
					this._LABOUR_CHARGES = value;
					this.SendPropertyChanged("LABOUR_CHARGES");
					this.OnLABOUR_CHARGESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_CARD_JOB_COMPLAINT", Storage="_JOB_CARD", ThisKey="JOBCARD_ID", OtherKey="JOBCARD_ID", IsForeignKey=true)]
		public JOB_CARD JOB_CARD
		{
			get
			{
				return this._JOB_CARD.Entity;
			}
			set
			{
				JOB_CARD previousValue = this._JOB_CARD.Entity;
				if (((previousValue != value) 
							|| (this._JOB_CARD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOB_CARD.Entity = null;
						previousValue.JOB_COMPLAINTs.Remove(this);
					}
					this._JOB_CARD.Entity = value;
					if ((value != null))
					{
						value.JOB_COMPLAINTs.Add(this);
						this._JOBCARD_ID = value.JOBCARD_ID;
					}
					else
					{
						this._JOBCARD_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("JOB_CARD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOB_TRACTOR_CUSTOMERS")]
	public partial class JOB_TRACTOR_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JOBTRACTOR_ID;
		
		private System.Nullable<int> _JOBCARD_ID;
		
		private string _ENGINE_NO;
		
		private string _CHASSIS_NO;
		
		private string _MODEL;
		
		private string _HMR;
		
		private string _CUSTOMER_NAME;
		
		private string _CUSTOMER_ADDRESS;
		
		private System.Nullable<long> _CONTACT_NO;
		
		private System.Nullable<System.DateTime> _DATEOF_INSTALLATION;
		
		private EntityRef<JOB_CARD> _JOB_CARD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOBTRACTOR_IDChanging(int value);
    partial void OnJOBTRACTOR_IDChanged();
    partial void OnJOBCARD_IDChanging(System.Nullable<int> value);
    partial void OnJOBCARD_IDChanged();
    partial void OnENGINE_NOChanging(string value);
    partial void OnENGINE_NOChanged();
    partial void OnCHASSIS_NOChanging(string value);
    partial void OnCHASSIS_NOChanged();
    partial void OnMODELChanging(string value);
    partial void OnMODELChanged();
    partial void OnHMRChanging(string value);
    partial void OnHMRChanged();
    partial void OnCUSTOMER_NAMEChanging(string value);
    partial void OnCUSTOMER_NAMEChanged();
    partial void OnCUSTOMER_ADDRESSChanging(string value);
    partial void OnCUSTOMER_ADDRESSChanged();
    partial void OnCONTACT_NOChanging(System.Nullable<long> value);
    partial void OnCONTACT_NOChanged();
    partial void OnDATEOF_INSTALLATIONChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEOF_INSTALLATIONChanged();
    #endregion
		
		public JOB_TRACTOR_CUSTOMER()
		{
			this._JOB_CARD = default(EntityRef<JOB_CARD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOBTRACTOR_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int JOBTRACTOR_ID
		{
			get
			{
				return this._JOBTRACTOR_ID;
			}
			set
			{
				if ((this._JOBTRACTOR_ID != value))
				{
					this.OnJOBTRACTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._JOBTRACTOR_ID = value;
					this.SendPropertyChanged("JOBTRACTOR_ID");
					this.OnJOBTRACTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOBCARD_ID", DbType="Int")]
		public System.Nullable<int> JOBCARD_ID
		{
			get
			{
				return this._JOBCARD_ID;
			}
			set
			{
				if ((this._JOBCARD_ID != value))
				{
					if (this._JOB_CARD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOBCARD_IDChanging(value);
					this.SendPropertyChanging();
					this._JOBCARD_ID = value;
					this.SendPropertyChanged("JOBCARD_ID");
					this.OnJOBCARD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENGINE_NO", DbType="VarChar(50)")]
		public string ENGINE_NO
		{
			get
			{
				return this._ENGINE_NO;
			}
			set
			{
				if ((this._ENGINE_NO != value))
				{
					this.OnENGINE_NOChanging(value);
					this.SendPropertyChanging();
					this._ENGINE_NO = value;
					this.SendPropertyChanged("ENGINE_NO");
					this.OnENGINE_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHASSIS_NO", DbType="VarChar(50)")]
		public string CHASSIS_NO
		{
			get
			{
				return this._CHASSIS_NO;
			}
			set
			{
				if ((this._CHASSIS_NO != value))
				{
					this.OnCHASSIS_NOChanging(value);
					this.SendPropertyChanging();
					this._CHASSIS_NO = value;
					this.SendPropertyChanged("CHASSIS_NO");
					this.OnCHASSIS_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODEL", DbType="VarChar(50)")]
		public string MODEL
		{
			get
			{
				return this._MODEL;
			}
			set
			{
				if ((this._MODEL != value))
				{
					this.OnMODELChanging(value);
					this.SendPropertyChanging();
					this._MODEL = value;
					this.SendPropertyChanged("MODEL");
					this.OnMODELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HMR", DbType="VarChar(50)")]
		public string HMR
		{
			get
			{
				return this._HMR;
			}
			set
			{
				if ((this._HMR != value))
				{
					this.OnHMRChanging(value);
					this.SendPropertyChanging();
					this._HMR = value;
					this.SendPropertyChanged("HMR");
					this.OnHMRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(50)")]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this.OnCUSTOMER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_NAME = value;
					this.SendPropertyChanged("CUSTOMER_NAME");
					this.OnCUSTOMER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_ADDRESS", DbType="VarChar(50)")]
		public string CUSTOMER_ADDRESS
		{
			get
			{
				return this._CUSTOMER_ADDRESS;
			}
			set
			{
				if ((this._CUSTOMER_ADDRESS != value))
				{
					this.OnCUSTOMER_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_ADDRESS = value;
					this.SendPropertyChanged("CUSTOMER_ADDRESS");
					this.OnCUSTOMER_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_NO", DbType="BigInt")]
		public System.Nullable<long> CONTACT_NO
		{
			get
			{
				return this._CONTACT_NO;
			}
			set
			{
				if ((this._CONTACT_NO != value))
				{
					this.OnCONTACT_NOChanging(value);
					this.SendPropertyChanging();
					this._CONTACT_NO = value;
					this.SendPropertyChanged("CONTACT_NO");
					this.OnCONTACT_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEOF_INSTALLATION", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEOF_INSTALLATION
		{
			get
			{
				return this._DATEOF_INSTALLATION;
			}
			set
			{
				if ((this._DATEOF_INSTALLATION != value))
				{
					this.OnDATEOF_INSTALLATIONChanging(value);
					this.SendPropertyChanging();
					this._DATEOF_INSTALLATION = value;
					this.SendPropertyChanged("DATEOF_INSTALLATION");
					this.OnDATEOF_INSTALLATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_CARD_JOB_TRACTOR_CUSTOMER", Storage="_JOB_CARD", ThisKey="JOBCARD_ID", OtherKey="JOBCARD_ID", IsForeignKey=true)]
		public JOB_CARD JOB_CARD
		{
			get
			{
				return this._JOB_CARD.Entity;
			}
			set
			{
				JOB_CARD previousValue = this._JOB_CARD.Entity;
				if (((previousValue != value) 
							|| (this._JOB_CARD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOB_CARD.Entity = null;
						previousValue.JOB_TRACTOR_CUSTOMERs.Remove(this);
					}
					this._JOB_CARD.Entity = value;
					if ((value != null))
					{
						value.JOB_TRACTOR_CUSTOMERs.Add(this);
						this._JOBCARD_ID = value.JOBCARD_ID;
					}
					else
					{
						this._JOBCARD_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("JOB_CARD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MASTER")]
	public partial class MASTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASTER_ID;
		
		private string _MASTER_VALUE;
		
		private int _MASTER_PARENT_ID;
		
		private EntitySet<CUSTOMER> _CUSTOMERs;
		
		private EntitySet<INVOICE> _INVOICEs;
		
		private EntitySet<SALES_INVOICE> _SALES_INVOICEs;
		
		private EntitySet<SPARE_PART> _SPARE_PARTs;
		
		private EntitySet<SPARE_PURCHASES_SALE> _SPARE_PURCHASES_SALEs;
		
		private EntitySet<SUPPLIER> _SUPPLIERs;
		
		private EntitySet<SUPPLIER> _SUPPLIERs1;
		
		private EntitySet<TRACTOR_MODEL> _TRACTOR_MODELs;
		
		private EntitySet<TRACTOR_PART> _TRACTOR_PARTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASTER_IDChanging(int value);
    partial void OnMASTER_IDChanged();
    partial void OnMASTER_VALUEChanging(string value);
    partial void OnMASTER_VALUEChanged();
    partial void OnMASTER_PARENT_IDChanging(int value);
    partial void OnMASTER_PARENT_IDChanged();
    #endregion
		
		public MASTER()
		{
			this._CUSTOMERs = new EntitySet<CUSTOMER>(new Action<CUSTOMER>(this.attach_CUSTOMERs), new Action<CUSTOMER>(this.detach_CUSTOMERs));
			this._INVOICEs = new EntitySet<INVOICE>(new Action<INVOICE>(this.attach_INVOICEs), new Action<INVOICE>(this.detach_INVOICEs));
			this._SALES_INVOICEs = new EntitySet<SALES_INVOICE>(new Action<SALES_INVOICE>(this.attach_SALES_INVOICEs), new Action<SALES_INVOICE>(this.detach_SALES_INVOICEs));
			this._SPARE_PARTs = new EntitySet<SPARE_PART>(new Action<SPARE_PART>(this.attach_SPARE_PARTs), new Action<SPARE_PART>(this.detach_SPARE_PARTs));
			this._SPARE_PURCHASES_SALEs = new EntitySet<SPARE_PURCHASES_SALE>(new Action<SPARE_PURCHASES_SALE>(this.attach_SPARE_PURCHASES_SALEs), new Action<SPARE_PURCHASES_SALE>(this.detach_SPARE_PURCHASES_SALEs));
			this._SUPPLIERs = new EntitySet<SUPPLIER>(new Action<SUPPLIER>(this.attach_SUPPLIERs), new Action<SUPPLIER>(this.detach_SUPPLIERs));
			this._SUPPLIERs1 = new EntitySet<SUPPLIER>(new Action<SUPPLIER>(this.attach_SUPPLIERs1), new Action<SUPPLIER>(this.detach_SUPPLIERs1));
			this._TRACTOR_MODELs = new EntitySet<TRACTOR_MODEL>(new Action<TRACTOR_MODEL>(this.attach_TRACTOR_MODELs), new Action<TRACTOR_MODEL>(this.detach_TRACTOR_MODELs));
			this._TRACTOR_PARTs = new EntitySet<TRACTOR_PART>(new Action<TRACTOR_PART>(this.attach_TRACTOR_PARTs), new Action<TRACTOR_PART>(this.detach_TRACTOR_PARTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASTER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASTER_ID
		{
			get
			{
				return this._MASTER_ID;
			}
			set
			{
				if ((this._MASTER_ID != value))
				{
					this.OnMASTER_IDChanging(value);
					this.SendPropertyChanging();
					this._MASTER_ID = value;
					this.SendPropertyChanged("MASTER_ID");
					this.OnMASTER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASTER_VALUE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MASTER_VALUE
		{
			get
			{
				return this._MASTER_VALUE;
			}
			set
			{
				if ((this._MASTER_VALUE != value))
				{
					this.OnMASTER_VALUEChanging(value);
					this.SendPropertyChanging();
					this._MASTER_VALUE = value;
					this.SendPropertyChanged("MASTER_VALUE");
					this.OnMASTER_VALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASTER_PARENT_ID", DbType="Int NOT NULL")]
		public int MASTER_PARENT_ID
		{
			get
			{
				return this._MASTER_PARENT_ID;
			}
			set
			{
				if ((this._MASTER_PARENT_ID != value))
				{
					this.OnMASTER_PARENT_IDChanging(value);
					this.SendPropertyChanging();
					this._MASTER_PARENT_ID = value;
					this.SendPropertyChanged("MASTER_PARENT_ID");
					this.OnMASTER_PARENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_CUSTOMER", Storage="_CUSTOMERs", ThisKey="MASTER_ID", OtherKey="STATUS_ID")]
		public EntitySet<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this._CUSTOMERs;
			}
			set
			{
				this._CUSTOMERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_INVOICE", Storage="_INVOICEs", ThisKey="MASTER_ID", OtherKey="PURCHASE_TYPE")]
		public EntitySet<INVOICE> INVOICEs
		{
			get
			{
				return this._INVOICEs;
			}
			set
			{
				this._INVOICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SALES_INVOICE", Storage="_SALES_INVOICEs", ThisKey="MASTER_ID", OtherKey="SELL_TYPE")]
		public EntitySet<SALES_INVOICE> SALES_INVOICEs
		{
			get
			{
				return this._SALES_INVOICEs;
			}
			set
			{
				this._SALES_INVOICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SPARE_PART", Storage="_SPARE_PARTs", ThisKey="MASTER_ID", OtherKey="SPARE_STATUS")]
		public EntitySet<SPARE_PART> SPARE_PARTs
		{
			get
			{
				return this._SPARE_PARTs;
			}
			set
			{
				this._SPARE_PARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SPARE_PURCHASES_SALE", Storage="_SPARE_PURCHASES_SALEs", ThisKey="MASTER_ID", OtherKey="TRANSACTION_TYPE")]
		public EntitySet<SPARE_PURCHASES_SALE> SPARE_PURCHASES_SALEs
		{
			get
			{
				return this._SPARE_PURCHASES_SALEs;
			}
			set
			{
				this._SPARE_PURCHASES_SALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SUPPLIER", Storage="_SUPPLIERs", ThisKey="MASTER_ID", OtherKey="SUPPLIER_STATUS")]
		public EntitySet<SUPPLIER> SUPPLIERs
		{
			get
			{
				return this._SUPPLIERs;
			}
			set
			{
				this._SUPPLIERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SUPPLIER1", Storage="_SUPPLIERs1", ThisKey="MASTER_ID", OtherKey="SUPPLIER_TYPE")]
		public EntitySet<SUPPLIER> SUPPLIERs1
		{
			get
			{
				return this._SUPPLIERs1;
			}
			set
			{
				this._SUPPLIERs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_TRACTOR_MODEL", Storage="_TRACTOR_MODELs", ThisKey="MASTER_ID", OtherKey="TRACTOR_STATUS")]
		public EntitySet<TRACTOR_MODEL> TRACTOR_MODELs
		{
			get
			{
				return this._TRACTOR_MODELs;
			}
			set
			{
				this._TRACTOR_MODELs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_TRACTOR_PART", Storage="_TRACTOR_PARTs", ThisKey="MASTER_ID", OtherKey="PART_TYPE")]
		public EntitySet<TRACTOR_PART> TRACTOR_PARTs
		{
			get
			{
				return this._TRACTOR_PARTs;
			}
			set
			{
				this._TRACTOR_PARTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
		
		private void attach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
		
		private void attach_SALES_INVOICEs(SALES_INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_SALES_INVOICEs(SALES_INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
		
		private void attach_SPARE_PARTs(SPARE_PART entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_SPARE_PARTs(SPARE_PART entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
		
		private void attach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
		
		private void attach_SUPPLIERs(SUPPLIER entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_SUPPLIERs(SUPPLIER entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
		
		private void attach_SUPPLIERs1(SUPPLIER entity)
		{
			this.SendPropertyChanging();
			entity.MASTER1 = this;
		}
		
		private void detach_SUPPLIERs1(SUPPLIER entity)
		{
			this.SendPropertyChanging();
			entity.MASTER1 = null;
		}
		
		private void attach_TRACTOR_MODELs(TRACTOR_MODEL entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_TRACTOR_MODELs(TRACTOR_MODEL entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
		
		private void attach_TRACTOR_PARTs(TRACTOR_PART entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = this;
		}
		
		private void detach_TRACTOR_PARTs(TRACTOR_PART entity)
		{
			this.SendPropertyChanging();
			entity.MASTER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OLD_TRACTORS")]
	public partial class OLD_TRACTOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OLDTRACTOR_ID;
		
		private string _CUSTOMER_NAME;
		
		private string _TRACTOR_MAKE;
		
		private string _TRACTOR_MODEL;
		
		private string _TRACTOR_REGISTRATION_NO;
		
		private int _TRACTOR_YEAR;
		
		private string _TRACTOR_RCBOOK_NO;
		
		private string _TRACTOR_EMPLIMENT;
		
		private decimal _PURCHASE_COST;
		
		private decimal _SELLING_COST;
		
		private System.Nullable<int> _TRACTOR_EXCHANGE_MODELID;
		
		private EntityRef<TRACTOR_MODEL> _TRACTOR_MODEL1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOLDTRACTOR_IDChanging(int value);
    partial void OnOLDTRACTOR_IDChanged();
    partial void OnCUSTOMER_NAMEChanging(string value);
    partial void OnCUSTOMER_NAMEChanged();
    partial void OnTRACTOR_MAKEChanging(string value);
    partial void OnTRACTOR_MAKEChanged();
    partial void OnTRACTOR_MODELChanging(string value);
    partial void OnTRACTOR_MODELChanged();
    partial void OnTRACTOR_REGISTRATION_NOChanging(string value);
    partial void OnTRACTOR_REGISTRATION_NOChanged();
    partial void OnTRACTOR_YEARChanging(int value);
    partial void OnTRACTOR_YEARChanged();
    partial void OnTRACTOR_RCBOOK_NOChanging(string value);
    partial void OnTRACTOR_RCBOOK_NOChanged();
    partial void OnTRACTOR_EMPLIMENTChanging(string value);
    partial void OnTRACTOR_EMPLIMENTChanged();
    partial void OnPURCHASE_COSTChanging(decimal value);
    partial void OnPURCHASE_COSTChanged();
    partial void OnSELLING_COSTChanging(decimal value);
    partial void OnSELLING_COSTChanged();
    partial void OnTRACTOR_EXCHANGE_MODELIDChanging(System.Nullable<int> value);
    partial void OnTRACTOR_EXCHANGE_MODELIDChanged();
    #endregion
		
		public OLD_TRACTOR()
		{
			this._TRACTOR_MODEL1 = default(EntityRef<TRACTOR_MODEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDTRACTOR_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OLDTRACTOR_ID
		{
			get
			{
				return this._OLDTRACTOR_ID;
			}
			set
			{
				if ((this._OLDTRACTOR_ID != value))
				{
					this.OnOLDTRACTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._OLDTRACTOR_ID = value;
					this.SendPropertyChanged("OLDTRACTOR_ID");
					this.OnOLDTRACTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this.OnCUSTOMER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_NAME = value;
					this.SendPropertyChanged("CUSTOMER_NAME");
					this.OnCUSTOMER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_MAKE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TRACTOR_MAKE
		{
			get
			{
				return this._TRACTOR_MAKE;
			}
			set
			{
				if ((this._TRACTOR_MAKE != value))
				{
					this.OnTRACTOR_MAKEChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_MAKE = value;
					this.SendPropertyChanged("TRACTOR_MAKE");
					this.OnTRACTOR_MAKEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_MODEL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TRACTOR_MODEL
		{
			get
			{
				return this._TRACTOR_MODEL;
			}
			set
			{
				if ((this._TRACTOR_MODEL != value))
				{
					this.OnTRACTOR_MODELChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_MODEL = value;
					this.SendPropertyChanged("TRACTOR_MODEL");
					this.OnTRACTOR_MODELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_REGISTRATION_NO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TRACTOR_REGISTRATION_NO
		{
			get
			{
				return this._TRACTOR_REGISTRATION_NO;
			}
			set
			{
				if ((this._TRACTOR_REGISTRATION_NO != value))
				{
					this.OnTRACTOR_REGISTRATION_NOChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_REGISTRATION_NO = value;
					this.SendPropertyChanged("TRACTOR_REGISTRATION_NO");
					this.OnTRACTOR_REGISTRATION_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_YEAR", DbType="Int NOT NULL")]
		public int TRACTOR_YEAR
		{
			get
			{
				return this._TRACTOR_YEAR;
			}
			set
			{
				if ((this._TRACTOR_YEAR != value))
				{
					this.OnTRACTOR_YEARChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_YEAR = value;
					this.SendPropertyChanged("TRACTOR_YEAR");
					this.OnTRACTOR_YEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_RCBOOK_NO", DbType="VarChar(50)")]
		public string TRACTOR_RCBOOK_NO
		{
			get
			{
				return this._TRACTOR_RCBOOK_NO;
			}
			set
			{
				if ((this._TRACTOR_RCBOOK_NO != value))
				{
					this.OnTRACTOR_RCBOOK_NOChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_RCBOOK_NO = value;
					this.SendPropertyChanged("TRACTOR_RCBOOK_NO");
					this.OnTRACTOR_RCBOOK_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_EMPLIMENT", DbType="VarChar(50)")]
		public string TRACTOR_EMPLIMENT
		{
			get
			{
				return this._TRACTOR_EMPLIMENT;
			}
			set
			{
				if ((this._TRACTOR_EMPLIMENT != value))
				{
					this.OnTRACTOR_EMPLIMENTChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_EMPLIMENT = value;
					this.SendPropertyChanged("TRACTOR_EMPLIMENT");
					this.OnTRACTOR_EMPLIMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PURCHASE_COST", DbType="Decimal(18,2) NOT NULL")]
		public decimal PURCHASE_COST
		{
			get
			{
				return this._PURCHASE_COST;
			}
			set
			{
				if ((this._PURCHASE_COST != value))
				{
					this.OnPURCHASE_COSTChanging(value);
					this.SendPropertyChanging();
					this._PURCHASE_COST = value;
					this.SendPropertyChanged("PURCHASE_COST");
					this.OnPURCHASE_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SELLING_COST", DbType="Decimal(18,2) NOT NULL")]
		public decimal SELLING_COST
		{
			get
			{
				return this._SELLING_COST;
			}
			set
			{
				if ((this._SELLING_COST != value))
				{
					this.OnSELLING_COSTChanging(value);
					this.SendPropertyChanging();
					this._SELLING_COST = value;
					this.SendPropertyChanged("SELLING_COST");
					this.OnSELLING_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_EXCHANGE_MODELID", DbType="Int")]
		public System.Nullable<int> TRACTOR_EXCHANGE_MODELID
		{
			get
			{
				return this._TRACTOR_EXCHANGE_MODELID;
			}
			set
			{
				if ((this._TRACTOR_EXCHANGE_MODELID != value))
				{
					if (this._TRACTOR_MODEL1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRACTOR_EXCHANGE_MODELIDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_EXCHANGE_MODELID = value;
					this.SendPropertyChanged("TRACTOR_EXCHANGE_MODELID");
					this.OnTRACTOR_EXCHANGE_MODELIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_MODEL_OLD_TRACTOR", Storage="_TRACTOR_MODEL1", ThisKey="TRACTOR_EXCHANGE_MODELID", OtherKey="TRACTOR_MODEL_ID", IsForeignKey=true)]
		public TRACTOR_MODEL TRACTOR_MODEL1
		{
			get
			{
				return this._TRACTOR_MODEL1.Entity;
			}
			set
			{
				TRACTOR_MODEL previousValue = this._TRACTOR_MODEL1.Entity;
				if (((previousValue != value) 
							|| (this._TRACTOR_MODEL1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRACTOR_MODEL1.Entity = null;
						previousValue.OLD_TRACTORs.Remove(this);
					}
					this._TRACTOR_MODEL1.Entity = value;
					if ((value != null))
					{
						value.OLD_TRACTORs.Add(this);
						this._TRACTOR_EXCHANGE_MODELID = value.TRACTOR_MODEL_ID;
					}
					else
					{
						this._TRACTOR_EXCHANGE_MODELID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TRACTOR_MODEL1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SALES_INVOICES")]
	public partial class SALES_INVOICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SALES_INVOICE_ID;
		
		private int _CUSTOMER_ID;
		
		private System.Nullable<System.DateTime> _INVOICE_DATE;
		
		private System.Nullable<decimal> _INVOICE_DISCOUNT;
		
		private System.Nullable<decimal> _INVOICE_VAT_PERCENT;
		
		private System.Nullable<decimal> _INVOICE_GRANDTOTAL;
		
		private int _SELL_TYPE;
		
		private EntitySet<BALANCE> _BALANCEs;
		
		private EntitySet<DELIVERY_CHALAN> _DELIVERY_CHALANs;
		
		private EntitySet<JOB_CARD> _JOB_CARDs;
		
		private EntitySet<SPARE_PURCHASES_SALE> _SPARE_PURCHASES_SALEs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
		private EntityRef<MASTER> _MASTER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSALES_INVOICE_IDChanging(int value);
    partial void OnSALES_INVOICE_IDChanged();
    partial void OnCUSTOMER_IDChanging(int value);
    partial void OnCUSTOMER_IDChanged();
    partial void OnINVOICE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINVOICE_DATEChanged();
    partial void OnINVOICE_DISCOUNTChanging(System.Nullable<decimal> value);
    partial void OnINVOICE_DISCOUNTChanged();
    partial void OnINVOICE_VAT_PERCENTChanging(System.Nullable<decimal> value);
    partial void OnINVOICE_VAT_PERCENTChanged();
    partial void OnINVOICE_GRANDTOTALChanging(System.Nullable<decimal> value);
    partial void OnINVOICE_GRANDTOTALChanged();
    partial void OnSELL_TYPEChanging(int value);
    partial void OnSELL_TYPEChanged();
    #endregion
		
		public SALES_INVOICE()
		{
			this._BALANCEs = new EntitySet<BALANCE>(new Action<BALANCE>(this.attach_BALANCEs), new Action<BALANCE>(this.detach_BALANCEs));
			this._DELIVERY_CHALANs = new EntitySet<DELIVERY_CHALAN>(new Action<DELIVERY_CHALAN>(this.attach_DELIVERY_CHALANs), new Action<DELIVERY_CHALAN>(this.detach_DELIVERY_CHALANs));
			this._JOB_CARDs = new EntitySet<JOB_CARD>(new Action<JOB_CARD>(this.attach_JOB_CARDs), new Action<JOB_CARD>(this.detach_JOB_CARDs));
			this._SPARE_PURCHASES_SALEs = new EntitySet<SPARE_PURCHASES_SALE>(new Action<SPARE_PURCHASES_SALE>(this.attach_SPARE_PURCHASES_SALEs), new Action<SPARE_PURCHASES_SALE>(this.detach_SPARE_PURCHASES_SALEs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			this._MASTER = default(EntityRef<MASTER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALES_INVOICE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SALES_INVOICE_ID
		{
			get
			{
				return this._SALES_INVOICE_ID;
			}
			set
			{
				if ((this._SALES_INVOICE_ID != value))
				{
					this.OnSALES_INVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._SALES_INVOICE_ID = value;
					this.SendPropertyChanged("SALES_INVOICE_ID");
					this.OnSALES_INVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_ID", DbType="Int NOT NULL")]
		public int CUSTOMER_ID
		{
			get
			{
				return this._CUSTOMER_ID;
			}
			set
			{
				if ((this._CUSTOMER_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUSTOMER_IDChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_ID = value;
					this.SendPropertyChanged("CUSTOMER_ID");
					this.OnCUSTOMER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INVOICE_DATE
		{
			get
			{
				return this._INVOICE_DATE;
			}
			set
			{
				if ((this._INVOICE_DATE != value))
				{
					this.OnINVOICE_DATEChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_DATE = value;
					this.SendPropertyChanged("INVOICE_DATE");
					this.OnINVOICE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_DISCOUNT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> INVOICE_DISCOUNT
		{
			get
			{
				return this._INVOICE_DISCOUNT;
			}
			set
			{
				if ((this._INVOICE_DISCOUNT != value))
				{
					this.OnINVOICE_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_DISCOUNT = value;
					this.SendPropertyChanged("INVOICE_DISCOUNT");
					this.OnINVOICE_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_VAT_PERCENT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> INVOICE_VAT_PERCENT
		{
			get
			{
				return this._INVOICE_VAT_PERCENT;
			}
			set
			{
				if ((this._INVOICE_VAT_PERCENT != value))
				{
					this.OnINVOICE_VAT_PERCENTChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_VAT_PERCENT = value;
					this.SendPropertyChanged("INVOICE_VAT_PERCENT");
					this.OnINVOICE_VAT_PERCENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_GRANDTOTAL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> INVOICE_GRANDTOTAL
		{
			get
			{
				return this._INVOICE_GRANDTOTAL;
			}
			set
			{
				if ((this._INVOICE_GRANDTOTAL != value))
				{
					this.OnINVOICE_GRANDTOTALChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_GRANDTOTAL = value;
					this.SendPropertyChanged("INVOICE_GRANDTOTAL");
					this.OnINVOICE_GRANDTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SELL_TYPE", DbType="Int NOT NULL")]
		public int SELL_TYPE
		{
			get
			{
				return this._SELL_TYPE;
			}
			set
			{
				if ((this._SELL_TYPE != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSELL_TYPEChanging(value);
					this.SendPropertyChanging();
					this._SELL_TYPE = value;
					this.SendPropertyChanged("SELL_TYPE");
					this.OnSELL_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_BALANCE", Storage="_BALANCEs", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID")]
		public EntitySet<BALANCE> BALANCEs
		{
			get
			{
				return this._BALANCEs;
			}
			set
			{
				this._BALANCEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_DELIVERY_CHALAN", Storage="_DELIVERY_CHALANs", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID")]
		public EntitySet<DELIVERY_CHALAN> DELIVERY_CHALANs
		{
			get
			{
				return this._DELIVERY_CHALANs;
			}
			set
			{
				this._DELIVERY_CHALANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_JOB_CARD", Storage="_JOB_CARDs", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID")]
		public EntitySet<JOB_CARD> JOB_CARDs
		{
			get
			{
				return this._JOB_CARDs;
			}
			set
			{
				this._JOB_CARDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_SPARE_PURCHASES_SALE", Storage="_SPARE_PURCHASES_SALEs", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID")]
		public EntitySet<SPARE_PURCHASES_SALE> SPARE_PURCHASES_SALEs
		{
			get
			{
				return this._SPARE_PURCHASES_SALEs;
			}
			set
			{
				this._SPARE_PURCHASES_SALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_SALES_INVOICE", Storage="_CUSTOMER", ThisKey="CUSTOMER_ID", OtherKey="CUSTOMER_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.SALES_INVOICEs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.SALES_INVOICEs.Add(this);
						this._CUSTOMER_ID = value.CUSTOMER_ID;
					}
					else
					{
						this._CUSTOMER_ID = default(int);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SALES_INVOICE", Storage="_MASTER", ThisKey="SELL_TYPE", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.SALES_INVOICEs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.SALES_INVOICEs.Add(this);
						this._SELL_TYPE = value.MASTER_ID;
					}
					else
					{
						this._SELL_TYPE = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BALANCEs(BALANCE entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = this;
		}
		
		private void detach_BALANCEs(BALANCE entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = null;
		}
		
		private void attach_DELIVERY_CHALANs(DELIVERY_CHALAN entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = this;
		}
		
		private void detach_DELIVERY_CHALANs(DELIVERY_CHALAN entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = null;
		}
		
		private void attach_JOB_CARDs(JOB_CARD entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = this;
		}
		
		private void detach_JOB_CARDs(JOB_CARD entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = null;
		}
		
		private void attach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = this;
		}
		
		private void detach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.SALES_INVOICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERVICE_CHARGES")]
	public partial class SERVICE_CHARGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SERVICE_ID;
		
		private System.Nullable<int> _JOBCARD_ID;
		
		private System.Nullable<int> _SERVICE_TYPE_ID;
		
		private string _REMARKS;
		
		private System.Nullable<decimal> _AMOUNT;
		
		private EntityRef<JOB_CARD> _JOB_CARD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSERVICE_IDChanging(int value);
    partial void OnSERVICE_IDChanged();
    partial void OnJOBCARD_IDChanging(System.Nullable<int> value);
    partial void OnJOBCARD_IDChanged();
    partial void OnSERVICE_TYPE_IDChanging(System.Nullable<int> value);
    partial void OnSERVICE_TYPE_IDChanged();
    partial void OnREMARKSChanging(string value);
    partial void OnREMARKSChanged();
    partial void OnAMOUNTChanging(System.Nullable<decimal> value);
    partial void OnAMOUNTChanged();
    #endregion
		
		public SERVICE_CHARGE()
		{
			this._JOB_CARD = default(EntityRef<JOB_CARD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERVICE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SERVICE_ID
		{
			get
			{
				return this._SERVICE_ID;
			}
			set
			{
				if ((this._SERVICE_ID != value))
				{
					this.OnSERVICE_IDChanging(value);
					this.SendPropertyChanging();
					this._SERVICE_ID = value;
					this.SendPropertyChanged("SERVICE_ID");
					this.OnSERVICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOBCARD_ID", DbType="Int")]
		public System.Nullable<int> JOBCARD_ID
		{
			get
			{
				return this._JOBCARD_ID;
			}
			set
			{
				if ((this._JOBCARD_ID != value))
				{
					if (this._JOB_CARD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOBCARD_IDChanging(value);
					this.SendPropertyChanging();
					this._JOBCARD_ID = value;
					this.SendPropertyChanged("JOBCARD_ID");
					this.OnJOBCARD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERVICE_TYPE_ID", DbType="Int")]
		public System.Nullable<int> SERVICE_TYPE_ID
		{
			get
			{
				return this._SERVICE_TYPE_ID;
			}
			set
			{
				if ((this._SERVICE_TYPE_ID != value))
				{
					this.OnSERVICE_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._SERVICE_TYPE_ID = value;
					this.SendPropertyChanged("SERVICE_TYPE_ID");
					this.OnSERVICE_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARKS", DbType="VarChar(MAX)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this.OnREMARKSChanging(value);
					this.SendPropertyChanging();
					this._REMARKS = value;
					this.SendPropertyChanged("REMARKS");
					this.OnREMARKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMOUNT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AMOUNT
		{
			get
			{
				return this._AMOUNT;
			}
			set
			{
				if ((this._AMOUNT != value))
				{
					this.OnAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT = value;
					this.SendPropertyChanged("AMOUNT");
					this.OnAMOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_CARD_SERVICE_CHARGE", Storage="_JOB_CARD", ThisKey="JOBCARD_ID", OtherKey="JOBCARD_ID", IsForeignKey=true)]
		public JOB_CARD JOB_CARD
		{
			get
			{
				return this._JOB_CARD.Entity;
			}
			set
			{
				JOB_CARD previousValue = this._JOB_CARD.Entity;
				if (((previousValue != value) 
							|| (this._JOB_CARD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOB_CARD.Entity = null;
						previousValue.SERVICE_CHARGEs.Remove(this);
					}
					this._JOB_CARD.Entity = value;
					if ((value != null))
					{
						value.SERVICE_CHARGEs.Add(this);
						this._JOBCARD_ID = value.JOBCARD_ID;
					}
					else
					{
						this._JOBCARD_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("JOB_CARD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPARE_PARTS")]
	public partial class SPARE_PART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPARE_PART_ID;
		
		private string _SPARE_PART_CODE;
		
		private string _SPARE_PART_DESCRIPTION;
		
		private System.Nullable<int> _SPARE_MINLEVEL;
		
		private string _SPARE_BIN_NO;
		
		private int _SPARE_STATUS;
		
		private EntitySet<SPARE_PURCHASES_SALE> _SPARE_PURCHASES_SALEs;
		
		private EntitySet<SPARE_RATE> _SPARE_RATEs;
		
		private EntityRef<MASTER> _MASTER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPARE_PART_IDChanging(int value);
    partial void OnSPARE_PART_IDChanged();
    partial void OnSPARE_PART_CODEChanging(string value);
    partial void OnSPARE_PART_CODEChanged();
    partial void OnSPARE_PART_DESCRIPTIONChanging(string value);
    partial void OnSPARE_PART_DESCRIPTIONChanged();
    partial void OnSPARE_MINLEVELChanging(System.Nullable<int> value);
    partial void OnSPARE_MINLEVELChanged();
    partial void OnSPARE_BIN_NOChanging(string value);
    partial void OnSPARE_BIN_NOChanged();
    partial void OnSPARE_STATUSChanging(int value);
    partial void OnSPARE_STATUSChanged();
    #endregion
		
		public SPARE_PART()
		{
			this._SPARE_PURCHASES_SALEs = new EntitySet<SPARE_PURCHASES_SALE>(new Action<SPARE_PURCHASES_SALE>(this.attach_SPARE_PURCHASES_SALEs), new Action<SPARE_PURCHASES_SALE>(this.detach_SPARE_PURCHASES_SALEs));
			this._SPARE_RATEs = new EntitySet<SPARE_RATE>(new Action<SPARE_RATE>(this.attach_SPARE_RATEs), new Action<SPARE_RATE>(this.detach_SPARE_RATEs));
			this._MASTER = default(EntityRef<MASTER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_PART_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SPARE_PART_ID
		{
			get
			{
				return this._SPARE_PART_ID;
			}
			set
			{
				if ((this._SPARE_PART_ID != value))
				{
					this.OnSPARE_PART_IDChanging(value);
					this.SendPropertyChanging();
					this._SPARE_PART_ID = value;
					this.SendPropertyChanged("SPARE_PART_ID");
					this.OnSPARE_PART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_PART_CODE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SPARE_PART_CODE
		{
			get
			{
				return this._SPARE_PART_CODE;
			}
			set
			{
				if ((this._SPARE_PART_CODE != value))
				{
					this.OnSPARE_PART_CODEChanging(value);
					this.SendPropertyChanging();
					this._SPARE_PART_CODE = value;
					this.SendPropertyChanged("SPARE_PART_CODE");
					this.OnSPARE_PART_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_PART_DESCRIPTION", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SPARE_PART_DESCRIPTION
		{
			get
			{
				return this._SPARE_PART_DESCRIPTION;
			}
			set
			{
				if ((this._SPARE_PART_DESCRIPTION != value))
				{
					this.OnSPARE_PART_DESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._SPARE_PART_DESCRIPTION = value;
					this.SendPropertyChanged("SPARE_PART_DESCRIPTION");
					this.OnSPARE_PART_DESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_MINLEVEL", DbType="Int")]
		public System.Nullable<int> SPARE_MINLEVEL
		{
			get
			{
				return this._SPARE_MINLEVEL;
			}
			set
			{
				if ((this._SPARE_MINLEVEL != value))
				{
					this.OnSPARE_MINLEVELChanging(value);
					this.SendPropertyChanging();
					this._SPARE_MINLEVEL = value;
					this.SendPropertyChanged("SPARE_MINLEVEL");
					this.OnSPARE_MINLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_BIN_NO", DbType="VarChar(50)")]
		public string SPARE_BIN_NO
		{
			get
			{
				return this._SPARE_BIN_NO;
			}
			set
			{
				if ((this._SPARE_BIN_NO != value))
				{
					this.OnSPARE_BIN_NOChanging(value);
					this.SendPropertyChanging();
					this._SPARE_BIN_NO = value;
					this.SendPropertyChanged("SPARE_BIN_NO");
					this.OnSPARE_BIN_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_STATUS", DbType="Int NOT NULL")]
		public int SPARE_STATUS
		{
			get
			{
				return this._SPARE_STATUS;
			}
			set
			{
				if ((this._SPARE_STATUS != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPARE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._SPARE_STATUS = value;
					this.SendPropertyChanged("SPARE_STATUS");
					this.OnSPARE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPARE_PART_SPARE_PURCHASES_SALE", Storage="_SPARE_PURCHASES_SALEs", ThisKey="SPARE_PART_ID", OtherKey="SPARE_PART_ID")]
		public EntitySet<SPARE_PURCHASES_SALE> SPARE_PURCHASES_SALEs
		{
			get
			{
				return this._SPARE_PURCHASES_SALEs;
			}
			set
			{
				this._SPARE_PURCHASES_SALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPARE_PART_SPARE_RATE", Storage="_SPARE_RATEs", ThisKey="SPARE_PART_ID", OtherKey="SPARE_PART_ID")]
		public EntitySet<SPARE_RATE> SPARE_RATEs
		{
			get
			{
				return this._SPARE_RATEs;
			}
			set
			{
				this._SPARE_RATEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SPARE_PART", Storage="_MASTER", ThisKey="SPARE_STATUS", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.SPARE_PARTs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.SPARE_PARTs.Add(this);
						this._SPARE_STATUS = value.MASTER_ID;
					}
					else
					{
						this._SPARE_STATUS = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.SPARE_PART = this;
		}
		
		private void detach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.SPARE_PART = null;
		}
		
		private void attach_SPARE_RATEs(SPARE_RATE entity)
		{
			this.SendPropertyChanging();
			entity.SPARE_PART = this;
		}
		
		private void detach_SPARE_RATEs(SPARE_RATE entity)
		{
			this.SendPropertyChanging();
			entity.SPARE_PART = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPARE_PURCHASES_SALES")]
	public partial class SPARE_PURCHASES_SALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPARE_ID;
		
		private int _SPARE_PART_ID;
		
		private System.Nullable<int> _INVOICE_ID;
		
		private int _QUANTITY;
		
		private int _SUPPLIER_ID;
		
		private int _TRANSACTION_TYPE;
		
		private decimal _SUB_TOTAL;
		
		private System.Nullable<int> _SALES_INVOICE_ID;
		
		private EntityRef<MASTER> _MASTER;
		
		private EntityRef<SPARE_PART> _SPARE_PART;
		
		private EntityRef<INVOICE> _INVOICE;
		
		private EntityRef<SALES_INVOICE> _SALES_INVOICE;
		
		private EntityRef<SUPPLIER> _SUPPLIER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPARE_IDChanging(int value);
    partial void OnSPARE_IDChanged();
    partial void OnSPARE_PART_IDChanging(int value);
    partial void OnSPARE_PART_IDChanged();
    partial void OnINVOICE_IDChanging(System.Nullable<int> value);
    partial void OnINVOICE_IDChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    partial void OnSUPPLIER_IDChanging(int value);
    partial void OnSUPPLIER_IDChanged();
    partial void OnTRANSACTION_TYPEChanging(int value);
    partial void OnTRANSACTION_TYPEChanged();
    partial void OnSUB_TOTALChanging(decimal value);
    partial void OnSUB_TOTALChanged();
    partial void OnSALES_INVOICE_IDChanging(System.Nullable<int> value);
    partial void OnSALES_INVOICE_IDChanged();
    #endregion
		
		public SPARE_PURCHASES_SALE()
		{
			this._MASTER = default(EntityRef<MASTER>);
			this._SPARE_PART = default(EntityRef<SPARE_PART>);
			this._INVOICE = default(EntityRef<INVOICE>);
			this._SALES_INVOICE = default(EntityRef<SALES_INVOICE>);
			this._SUPPLIER = default(EntityRef<SUPPLIER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SPARE_ID
		{
			get
			{
				return this._SPARE_ID;
			}
			set
			{
				if ((this._SPARE_ID != value))
				{
					this.OnSPARE_IDChanging(value);
					this.SendPropertyChanging();
					this._SPARE_ID = value;
					this.SendPropertyChanged("SPARE_ID");
					this.OnSPARE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_PART_ID", DbType="Int NOT NULL")]
		public int SPARE_PART_ID
		{
			get
			{
				return this._SPARE_PART_ID;
			}
			set
			{
				if ((this._SPARE_PART_ID != value))
				{
					if (this._SPARE_PART.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPARE_PART_IDChanging(value);
					this.SendPropertyChanging();
					this._SPARE_PART_ID = value;
					this.SendPropertyChanged("SPARE_PART_ID");
					this.OnSPARE_PART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_ID", DbType="Int")]
		public System.Nullable<int> INVOICE_ID
		{
			get
			{
				return this._INVOICE_ID;
			}
			set
			{
				if ((this._INVOICE_ID != value))
				{
					if (this._INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_ID = value;
					this.SendPropertyChanged("INVOICE_ID");
					this.OnINVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_ID", DbType="Int NOT NULL")]
		public int SUPPLIER_ID
		{
			get
			{
				return this._SUPPLIER_ID;
			}
			set
			{
				if ((this._SUPPLIER_ID != value))
				{
					if (this._SUPPLIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPLIER_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_ID = value;
					this.SendPropertyChanged("SUPPLIER_ID");
					this.OnSUPPLIER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANSACTION_TYPE", DbType="Int NOT NULL")]
		public int TRANSACTION_TYPE
		{
			get
			{
				return this._TRANSACTION_TYPE;
			}
			set
			{
				if ((this._TRANSACTION_TYPE != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRANSACTION_TYPEChanging(value);
					this.SendPropertyChanging();
					this._TRANSACTION_TYPE = value;
					this.SendPropertyChanged("TRANSACTION_TYPE");
					this.OnTRANSACTION_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUB_TOTAL", DbType="Decimal(18,2) NOT NULL")]
		public decimal SUB_TOTAL
		{
			get
			{
				return this._SUB_TOTAL;
			}
			set
			{
				if ((this._SUB_TOTAL != value))
				{
					this.OnSUB_TOTALChanging(value);
					this.SendPropertyChanging();
					this._SUB_TOTAL = value;
					this.SendPropertyChanged("SUB_TOTAL");
					this.OnSUB_TOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALES_INVOICE_ID", DbType="Int")]
		public System.Nullable<int> SALES_INVOICE_ID
		{
			get
			{
				return this._SALES_INVOICE_ID;
			}
			set
			{
				if ((this._SALES_INVOICE_ID != value))
				{
					if (this._SALES_INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSALES_INVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._SALES_INVOICE_ID = value;
					this.SendPropertyChanged("SALES_INVOICE_ID");
					this.OnSALES_INVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SPARE_PURCHASES_SALE", Storage="_MASTER", ThisKey="TRANSACTION_TYPE", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.SPARE_PURCHASES_SALEs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.SPARE_PURCHASES_SALEs.Add(this);
						this._TRANSACTION_TYPE = value.MASTER_ID;
					}
					else
					{
						this._TRANSACTION_TYPE = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPARE_PART_SPARE_PURCHASES_SALE", Storage="_SPARE_PART", ThisKey="SPARE_PART_ID", OtherKey="SPARE_PART_ID", IsForeignKey=true)]
		public SPARE_PART SPARE_PART
		{
			get
			{
				return this._SPARE_PART.Entity;
			}
			set
			{
				SPARE_PART previousValue = this._SPARE_PART.Entity;
				if (((previousValue != value) 
							|| (this._SPARE_PART.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPARE_PART.Entity = null;
						previousValue.SPARE_PURCHASES_SALEs.Remove(this);
					}
					this._SPARE_PART.Entity = value;
					if ((value != null))
					{
						value.SPARE_PURCHASES_SALEs.Add(this);
						this._SPARE_PART_ID = value.SPARE_PART_ID;
					}
					else
					{
						this._SPARE_PART_ID = default(int);
					}
					this.SendPropertyChanged("SPARE_PART");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_SPARE_PURCHASES_SALE", Storage="_INVOICE", ThisKey="INVOICE_ID", OtherKey="INVOICE_ID", IsForeignKey=true)]
		public INVOICE INVOICE
		{
			get
			{
				return this._INVOICE.Entity;
			}
			set
			{
				INVOICE previousValue = this._INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INVOICE.Entity = null;
						previousValue.SPARE_PURCHASES_SALEs.Remove(this);
					}
					this._INVOICE.Entity = value;
					if ((value != null))
					{
						value.SPARE_PURCHASES_SALEs.Add(this);
						this._INVOICE_ID = value.INVOICE_ID;
					}
					else
					{
						this._INVOICE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("INVOICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_INVOICE_SPARE_PURCHASES_SALE", Storage="_SALES_INVOICE", ThisKey="SALES_INVOICE_ID", OtherKey="SALES_INVOICE_ID", IsForeignKey=true)]
		public SALES_INVOICE SALES_INVOICE
		{
			get
			{
				return this._SALES_INVOICE.Entity;
			}
			set
			{
				SALES_INVOICE previousValue = this._SALES_INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._SALES_INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_INVOICE.Entity = null;
						previousValue.SPARE_PURCHASES_SALEs.Remove(this);
					}
					this._SALES_INVOICE.Entity = value;
					if ((value != null))
					{
						value.SPARE_PURCHASES_SALEs.Add(this);
						this._SALES_INVOICE_ID = value.SALES_INVOICE_ID;
					}
					else
					{
						this._SALES_INVOICE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_INVOICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_SPARE_PURCHASES_SALE", Storage="_SUPPLIER", ThisKey="SUPPLIER_ID", OtherKey="SUPPLIER_ID", IsForeignKey=true)]
		public SUPPLIER SUPPLIER
		{
			get
			{
				return this._SUPPLIER.Entity;
			}
			set
			{
				SUPPLIER previousValue = this._SUPPLIER.Entity;
				if (((previousValue != value) 
							|| (this._SUPPLIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPLIER.Entity = null;
						previousValue.SPARE_PURCHASES_SALEs.Remove(this);
					}
					this._SUPPLIER.Entity = value;
					if ((value != null))
					{
						value.SPARE_PURCHASES_SALEs.Add(this);
						this._SUPPLIER_ID = value.SUPPLIER_ID;
					}
					else
					{
						this._SUPPLIER_ID = default(int);
					}
					this.SendPropertyChanged("SUPPLIER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPARE_RATES")]
	public partial class SPARE_RATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPARE_RATE_ID;
		
		private int _SPARE_PART_ID;
		
		private int _SUPPLIER_ID;
		
		private decimal _SPARE_RATE_VALUE;
		
		private EntityRef<SPARE_PART> _SPARE_PART;
		
		private EntityRef<SUPPLIER> _SUPPLIER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPARE_RATE_IDChanging(int value);
    partial void OnSPARE_RATE_IDChanged();
    partial void OnSPARE_PART_IDChanging(int value);
    partial void OnSPARE_PART_IDChanged();
    partial void OnSUPPLIER_IDChanging(int value);
    partial void OnSUPPLIER_IDChanged();
    partial void OnSPARE_RATE_VALUEChanging(decimal value);
    partial void OnSPARE_RATE_VALUEChanged();
    #endregion
		
		public SPARE_RATE()
		{
			this._SPARE_PART = default(EntityRef<SPARE_PART>);
			this._SUPPLIER = default(EntityRef<SUPPLIER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_RATE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SPARE_RATE_ID
		{
			get
			{
				return this._SPARE_RATE_ID;
			}
			set
			{
				if ((this._SPARE_RATE_ID != value))
				{
					this.OnSPARE_RATE_IDChanging(value);
					this.SendPropertyChanging();
					this._SPARE_RATE_ID = value;
					this.SendPropertyChanged("SPARE_RATE_ID");
					this.OnSPARE_RATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_PART_ID", DbType="Int NOT NULL")]
		public int SPARE_PART_ID
		{
			get
			{
				return this._SPARE_PART_ID;
			}
			set
			{
				if ((this._SPARE_PART_ID != value))
				{
					if (this._SPARE_PART.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPARE_PART_IDChanging(value);
					this.SendPropertyChanging();
					this._SPARE_PART_ID = value;
					this.SendPropertyChanged("SPARE_PART_ID");
					this.OnSPARE_PART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_ID", DbType="Int NOT NULL")]
		public int SUPPLIER_ID
		{
			get
			{
				return this._SUPPLIER_ID;
			}
			set
			{
				if ((this._SUPPLIER_ID != value))
				{
					if (this._SUPPLIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPLIER_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_ID = value;
					this.SendPropertyChanged("SUPPLIER_ID");
					this.OnSUPPLIER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPARE_RATE_VALUE", DbType="Decimal(18,2) NOT NULL")]
		public decimal SPARE_RATE_VALUE
		{
			get
			{
				return this._SPARE_RATE_VALUE;
			}
			set
			{
				if ((this._SPARE_RATE_VALUE != value))
				{
					this.OnSPARE_RATE_VALUEChanging(value);
					this.SendPropertyChanging();
					this._SPARE_RATE_VALUE = value;
					this.SendPropertyChanged("SPARE_RATE_VALUE");
					this.OnSPARE_RATE_VALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPARE_PART_SPARE_RATE", Storage="_SPARE_PART", ThisKey="SPARE_PART_ID", OtherKey="SPARE_PART_ID", IsForeignKey=true)]
		public SPARE_PART SPARE_PART
		{
			get
			{
				return this._SPARE_PART.Entity;
			}
			set
			{
				SPARE_PART previousValue = this._SPARE_PART.Entity;
				if (((previousValue != value) 
							|| (this._SPARE_PART.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPARE_PART.Entity = null;
						previousValue.SPARE_RATEs.Remove(this);
					}
					this._SPARE_PART.Entity = value;
					if ((value != null))
					{
						value.SPARE_RATEs.Add(this);
						this._SPARE_PART_ID = value.SPARE_PART_ID;
					}
					else
					{
						this._SPARE_PART_ID = default(int);
					}
					this.SendPropertyChanged("SPARE_PART");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_SPARE_RATE", Storage="_SUPPLIER", ThisKey="SUPPLIER_ID", OtherKey="SUPPLIER_ID", IsForeignKey=true)]
		public SUPPLIER SUPPLIER
		{
			get
			{
				return this._SUPPLIER.Entity;
			}
			set
			{
				SUPPLIER previousValue = this._SUPPLIER.Entity;
				if (((previousValue != value) 
							|| (this._SUPPLIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPLIER.Entity = null;
						previousValue.SPARE_RATEs.Remove(this);
					}
					this._SUPPLIER.Entity = value;
					if ((value != null))
					{
						value.SPARE_RATEs.Add(this);
						this._SUPPLIER_ID = value.SUPPLIER_ID;
					}
					else
					{
						this._SUPPLIER_ID = default(int);
					}
					this.SendPropertyChanged("SUPPLIER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUPPLIER")]
	public partial class SUPPLIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SUPPLIER_ID;
		
		private string _SUPPLIER_NAME;
		
		private long _SUPPLIER_CONTACT_NO;
		
		private string _SUPPLIER_ADDRESS;
		
		private int _SUPPLIER_TYPE;
		
		private int _SUPPLIER_STATUS;
		
		private EntitySet<SPARE_PURCHASES_SALE> _SPARE_PURCHASES_SALEs;
		
		private EntitySet<SPARE_RATE> _SPARE_RATEs;
		
		private EntitySet<TRACTOR_MODEL> _TRACTOR_MODELs;
		
		private EntityRef<MASTER> _MASTER;
		
		private EntityRef<MASTER> _MASTER1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUPPLIER_IDChanging(int value);
    partial void OnSUPPLIER_IDChanged();
    partial void OnSUPPLIER_NAMEChanging(string value);
    partial void OnSUPPLIER_NAMEChanged();
    partial void OnSUPPLIER_CONTACT_NOChanging(long value);
    partial void OnSUPPLIER_CONTACT_NOChanged();
    partial void OnSUPPLIER_ADDRESSChanging(string value);
    partial void OnSUPPLIER_ADDRESSChanged();
    partial void OnSUPPLIER_TYPEChanging(int value);
    partial void OnSUPPLIER_TYPEChanged();
    partial void OnSUPPLIER_STATUSChanging(int value);
    partial void OnSUPPLIER_STATUSChanged();
    #endregion
		
		public SUPPLIER()
		{
			this._SPARE_PURCHASES_SALEs = new EntitySet<SPARE_PURCHASES_SALE>(new Action<SPARE_PURCHASES_SALE>(this.attach_SPARE_PURCHASES_SALEs), new Action<SPARE_PURCHASES_SALE>(this.detach_SPARE_PURCHASES_SALEs));
			this._SPARE_RATEs = new EntitySet<SPARE_RATE>(new Action<SPARE_RATE>(this.attach_SPARE_RATEs), new Action<SPARE_RATE>(this.detach_SPARE_RATEs));
			this._TRACTOR_MODELs = new EntitySet<TRACTOR_MODEL>(new Action<TRACTOR_MODEL>(this.attach_TRACTOR_MODELs), new Action<TRACTOR_MODEL>(this.detach_TRACTOR_MODELs));
			this._MASTER = default(EntityRef<MASTER>);
			this._MASTER1 = default(EntityRef<MASTER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SUPPLIER_ID
		{
			get
			{
				return this._SUPPLIER_ID;
			}
			set
			{
				if ((this._SUPPLIER_ID != value))
				{
					this.OnSUPPLIER_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_ID = value;
					this.SendPropertyChanged("SUPPLIER_ID");
					this.OnSUPPLIER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SUPPLIER_NAME
		{
			get
			{
				return this._SUPPLIER_NAME;
			}
			set
			{
				if ((this._SUPPLIER_NAME != value))
				{
					this.OnSUPPLIER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_NAME = value;
					this.SendPropertyChanged("SUPPLIER_NAME");
					this.OnSUPPLIER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_CONTACT_NO", DbType="BigInt NOT NULL")]
		public long SUPPLIER_CONTACT_NO
		{
			get
			{
				return this._SUPPLIER_CONTACT_NO;
			}
			set
			{
				if ((this._SUPPLIER_CONTACT_NO != value))
				{
					this.OnSUPPLIER_CONTACT_NOChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_CONTACT_NO = value;
					this.SendPropertyChanged("SUPPLIER_CONTACT_NO");
					this.OnSUPPLIER_CONTACT_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_ADDRESS", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SUPPLIER_ADDRESS
		{
			get
			{
				return this._SUPPLIER_ADDRESS;
			}
			set
			{
				if ((this._SUPPLIER_ADDRESS != value))
				{
					this.OnSUPPLIER_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_ADDRESS = value;
					this.SendPropertyChanged("SUPPLIER_ADDRESS");
					this.OnSUPPLIER_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_TYPE", DbType="Int NOT NULL")]
		public int SUPPLIER_TYPE
		{
			get
			{
				return this._SUPPLIER_TYPE;
			}
			set
			{
				if ((this._SUPPLIER_TYPE != value))
				{
					if (this._MASTER1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPLIER_TYPEChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_TYPE = value;
					this.SendPropertyChanged("SUPPLIER_TYPE");
					this.OnSUPPLIER_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_STATUS", DbType="Int NOT NULL")]
		public int SUPPLIER_STATUS
		{
			get
			{
				return this._SUPPLIER_STATUS;
			}
			set
			{
				if ((this._SUPPLIER_STATUS != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPLIER_STATUSChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_STATUS = value;
					this.SendPropertyChanged("SUPPLIER_STATUS");
					this.OnSUPPLIER_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_SPARE_PURCHASES_SALE", Storage="_SPARE_PURCHASES_SALEs", ThisKey="SUPPLIER_ID", OtherKey="SUPPLIER_ID")]
		public EntitySet<SPARE_PURCHASES_SALE> SPARE_PURCHASES_SALEs
		{
			get
			{
				return this._SPARE_PURCHASES_SALEs;
			}
			set
			{
				this._SPARE_PURCHASES_SALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_SPARE_RATE", Storage="_SPARE_RATEs", ThisKey="SUPPLIER_ID", OtherKey="SUPPLIER_ID")]
		public EntitySet<SPARE_RATE> SPARE_RATEs
		{
			get
			{
				return this._SPARE_RATEs;
			}
			set
			{
				this._SPARE_RATEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_TRACTOR_MODEL", Storage="_TRACTOR_MODELs", ThisKey="SUPPLIER_ID", OtherKey="SUPPLIER_ID")]
		public EntitySet<TRACTOR_MODEL> TRACTOR_MODELs
		{
			get
			{
				return this._TRACTOR_MODELs;
			}
			set
			{
				this._TRACTOR_MODELs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SUPPLIER", Storage="_MASTER", ThisKey="SUPPLIER_STATUS", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.SUPPLIERs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.SUPPLIERs.Add(this);
						this._SUPPLIER_STATUS = value.MASTER_ID;
					}
					else
					{
						this._SUPPLIER_STATUS = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_SUPPLIER1", Storage="_MASTER1", ThisKey="SUPPLIER_TYPE", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER1
		{
			get
			{
				return this._MASTER1.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER1.Entity;
				if (((previousValue != value) 
							|| (this._MASTER1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER1.Entity = null;
						previousValue.SUPPLIERs1.Remove(this);
					}
					this._MASTER1.Entity = value;
					if ((value != null))
					{
						value.SUPPLIERs1.Add(this);
						this._SUPPLIER_TYPE = value.MASTER_ID;
					}
					else
					{
						this._SUPPLIER_TYPE = default(int);
					}
					this.SendPropertyChanged("MASTER1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = this;
		}
		
		private void detach_SPARE_PURCHASES_SALEs(SPARE_PURCHASES_SALE entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = null;
		}
		
		private void attach_SPARE_RATEs(SPARE_RATE entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = this;
		}
		
		private void detach_SPARE_RATEs(SPARE_RATE entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = null;
		}
		
		private void attach_TRACTOR_MODELs(TRACTOR_MODEL entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = this;
		}
		
		private void detach_TRACTOR_MODELs(TRACTOR_MODEL entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TALUKS")]
	public partial class TALUK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TALUK_ID;
		
		private int _DISTRICT_ID;
		
		private string _TALUK_NAME;
		
		private EntitySet<VILLAGE> _VILLAGEs;
		
		private EntityRef<DISTRICT> _DISTRICT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTALUK_IDChanging(int value);
    partial void OnTALUK_IDChanged();
    partial void OnDISTRICT_IDChanging(int value);
    partial void OnDISTRICT_IDChanged();
    partial void OnTALUK_NAMEChanging(string value);
    partial void OnTALUK_NAMEChanged();
    #endregion
		
		public TALUK()
		{
			this._VILLAGEs = new EntitySet<VILLAGE>(new Action<VILLAGE>(this.attach_VILLAGEs), new Action<VILLAGE>(this.detach_VILLAGEs));
			this._DISTRICT = default(EntityRef<DISTRICT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TALUK_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TALUK_ID
		{
			get
			{
				return this._TALUK_ID;
			}
			set
			{
				if ((this._TALUK_ID != value))
				{
					this.OnTALUK_IDChanging(value);
					this.SendPropertyChanging();
					this._TALUK_ID = value;
					this.SendPropertyChanged("TALUK_ID");
					this.OnTALUK_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISTRICT_ID", DbType="Int NOT NULL")]
		public int DISTRICT_ID
		{
			get
			{
				return this._DISTRICT_ID;
			}
			set
			{
				if ((this._DISTRICT_ID != value))
				{
					if (this._DISTRICT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDISTRICT_IDChanging(value);
					this.SendPropertyChanging();
					this._DISTRICT_ID = value;
					this.SendPropertyChanged("DISTRICT_ID");
					this.OnDISTRICT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TALUK_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TALUK_NAME
		{
			get
			{
				return this._TALUK_NAME;
			}
			set
			{
				if ((this._TALUK_NAME != value))
				{
					this.OnTALUK_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TALUK_NAME = value;
					this.SendPropertyChanged("TALUK_NAME");
					this.OnTALUK_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TALUK_VILLAGE", Storage="_VILLAGEs", ThisKey="TALUK_ID", OtherKey="TALUK_ID")]
		public EntitySet<VILLAGE> VILLAGEs
		{
			get
			{
				return this._VILLAGEs;
			}
			set
			{
				this._VILLAGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISTRICT_TALUK", Storage="_DISTRICT", ThisKey="DISTRICT_ID", OtherKey="DISTRICT_ID", IsForeignKey=true)]
		public DISTRICT DISTRICT
		{
			get
			{
				return this._DISTRICT.Entity;
			}
			set
			{
				DISTRICT previousValue = this._DISTRICT.Entity;
				if (((previousValue != value) 
							|| (this._DISTRICT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISTRICT.Entity = null;
						previousValue.TALUKs.Remove(this);
					}
					this._DISTRICT.Entity = value;
					if ((value != null))
					{
						value.TALUKs.Add(this);
						this._DISTRICT_ID = value.DISTRICT_ID;
					}
					else
					{
						this._DISTRICT_ID = default(int);
					}
					this.SendPropertyChanged("DISTRICT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VILLAGEs(VILLAGE entity)
		{
			this.SendPropertyChanging();
			entity.TALUK = this;
		}
		
		private void detach_VILLAGEs(VILLAGE entity)
		{
			this.SendPropertyChanging();
			entity.TALUK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRACTOR_MODELS")]
	public partial class TRACTOR_MODEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TRACTOR_MODEL_ID;
		
		private int _SUPPLIER_ID;
		
		private string _TRACTOR_MODEL_NAME;
		
		private decimal _TRACTOR_SHOWROOMRATE;
		
		private System.Data.Linq.Binary _TRACTOR_IMAGE;
		
		private int _TRACTOR_STATUS;
		
		private EntitySet<OLD_TRACTOR> _OLD_TRACTORs;
		
		private EntitySet<TRACTOR_PURCHASE> _TRACTOR_PURCHASEs;
		
		private EntityRef<MASTER> _MASTER;
		
		private EntityRef<SUPPLIER> _SUPPLIER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRACTOR_MODEL_IDChanging(int value);
    partial void OnTRACTOR_MODEL_IDChanged();
    partial void OnSUPPLIER_IDChanging(int value);
    partial void OnSUPPLIER_IDChanged();
    partial void OnTRACTOR_MODEL_NAMEChanging(string value);
    partial void OnTRACTOR_MODEL_NAMEChanged();
    partial void OnTRACTOR_SHOWROOMRATEChanging(decimal value);
    partial void OnTRACTOR_SHOWROOMRATEChanged();
    partial void OnTRACTOR_IMAGEChanging(System.Data.Linq.Binary value);
    partial void OnTRACTOR_IMAGEChanged();
    partial void OnTRACTOR_STATUSChanging(int value);
    partial void OnTRACTOR_STATUSChanged();
    #endregion
		
		public TRACTOR_MODEL()
		{
			this._OLD_TRACTORs = new EntitySet<OLD_TRACTOR>(new Action<OLD_TRACTOR>(this.attach_OLD_TRACTORs), new Action<OLD_TRACTOR>(this.detach_OLD_TRACTORs));
			this._TRACTOR_PURCHASEs = new EntitySet<TRACTOR_PURCHASE>(new Action<TRACTOR_PURCHASE>(this.attach_TRACTOR_PURCHASEs), new Action<TRACTOR_PURCHASE>(this.detach_TRACTOR_PURCHASEs));
			this._MASTER = default(EntityRef<MASTER>);
			this._SUPPLIER = default(EntityRef<SUPPLIER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_MODEL_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TRACTOR_MODEL_ID
		{
			get
			{
				return this._TRACTOR_MODEL_ID;
			}
			set
			{
				if ((this._TRACTOR_MODEL_ID != value))
				{
					this.OnTRACTOR_MODEL_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_MODEL_ID = value;
					this.SendPropertyChanged("TRACTOR_MODEL_ID");
					this.OnTRACTOR_MODEL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER_ID", DbType="Int NOT NULL")]
		public int SUPPLIER_ID
		{
			get
			{
				return this._SUPPLIER_ID;
			}
			set
			{
				if ((this._SUPPLIER_ID != value))
				{
					if (this._SUPPLIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPLIER_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER_ID = value;
					this.SendPropertyChanged("SUPPLIER_ID");
					this.OnSUPPLIER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_MODEL_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TRACTOR_MODEL_NAME
		{
			get
			{
				return this._TRACTOR_MODEL_NAME;
			}
			set
			{
				if ((this._TRACTOR_MODEL_NAME != value))
				{
					this.OnTRACTOR_MODEL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_MODEL_NAME = value;
					this.SendPropertyChanged("TRACTOR_MODEL_NAME");
					this.OnTRACTOR_MODEL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_SHOWROOMRATE", DbType="Decimal(18,2) NOT NULL")]
		public decimal TRACTOR_SHOWROOMRATE
		{
			get
			{
				return this._TRACTOR_SHOWROOMRATE;
			}
			set
			{
				if ((this._TRACTOR_SHOWROOMRATE != value))
				{
					this.OnTRACTOR_SHOWROOMRATEChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_SHOWROOMRATE = value;
					this.SendPropertyChanged("TRACTOR_SHOWROOMRATE");
					this.OnTRACTOR_SHOWROOMRATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_IMAGE", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TRACTOR_IMAGE
		{
			get
			{
				return this._TRACTOR_IMAGE;
			}
			set
			{
				if ((this._TRACTOR_IMAGE != value))
				{
					this.OnTRACTOR_IMAGEChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_IMAGE = value;
					this.SendPropertyChanged("TRACTOR_IMAGE");
					this.OnTRACTOR_IMAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_STATUS", DbType="Int NOT NULL")]
		public int TRACTOR_STATUS
		{
			get
			{
				return this._TRACTOR_STATUS;
			}
			set
			{
				if ((this._TRACTOR_STATUS != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRACTOR_STATUSChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_STATUS = value;
					this.SendPropertyChanged("TRACTOR_STATUS");
					this.OnTRACTOR_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_MODEL_OLD_TRACTOR", Storage="_OLD_TRACTORs", ThisKey="TRACTOR_MODEL_ID", OtherKey="TRACTOR_EXCHANGE_MODELID")]
		public EntitySet<OLD_TRACTOR> OLD_TRACTORs
		{
			get
			{
				return this._OLD_TRACTORs;
			}
			set
			{
				this._OLD_TRACTORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_MODEL_TRACTOR_PURCHASE", Storage="_TRACTOR_PURCHASEs", ThisKey="TRACTOR_MODEL_ID", OtherKey="TRACTOR_MODEL_ID")]
		public EntitySet<TRACTOR_PURCHASE> TRACTOR_PURCHASEs
		{
			get
			{
				return this._TRACTOR_PURCHASEs;
			}
			set
			{
				this._TRACTOR_PURCHASEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_TRACTOR_MODEL", Storage="_MASTER", ThisKey="TRACTOR_STATUS", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.TRACTOR_MODELs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.TRACTOR_MODELs.Add(this);
						this._TRACTOR_STATUS = value.MASTER_ID;
					}
					else
					{
						this._TRACTOR_STATUS = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_TRACTOR_MODEL", Storage="_SUPPLIER", ThisKey="SUPPLIER_ID", OtherKey="SUPPLIER_ID", IsForeignKey=true)]
		public SUPPLIER SUPPLIER
		{
			get
			{
				return this._SUPPLIER.Entity;
			}
			set
			{
				SUPPLIER previousValue = this._SUPPLIER.Entity;
				if (((previousValue != value) 
							|| (this._SUPPLIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPLIER.Entity = null;
						previousValue.TRACTOR_MODELs.Remove(this);
					}
					this._SUPPLIER.Entity = value;
					if ((value != null))
					{
						value.TRACTOR_MODELs.Add(this);
						this._SUPPLIER_ID = value.SUPPLIER_ID;
					}
					else
					{
						this._SUPPLIER_ID = default(int);
					}
					this.SendPropertyChanged("SUPPLIER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OLD_TRACTORs(OLD_TRACTOR entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_MODEL1 = this;
		}
		
		private void detach_OLD_TRACTORs(OLD_TRACTOR entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_MODEL1 = null;
		}
		
		private void attach_TRACTOR_PURCHASEs(TRACTOR_PURCHASE entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_MODEL = this;
		}
		
		private void detach_TRACTOR_PURCHASEs(TRACTOR_PURCHASE entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_MODEL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRACTOR_PARTS")]
	public partial class TRACTOR_PART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TRACTOR_PART_ID;
		
		private int _TRACTOR_ID;
		
		private string _PART_MAKER;
		
		private string _PART_SIZE;
		
		private string _PART_SERIAL_NO;
		
		private string _PART_REMARKS;
		
		private int _PART_TYPE;
		
		private EntityRef<MASTER> _MASTER;
		
		private EntityRef<TRACTOR_PURCHASE> _TRACTOR_PURCHASE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRACTOR_PART_IDChanging(int value);
    partial void OnTRACTOR_PART_IDChanged();
    partial void OnTRACTOR_IDChanging(int value);
    partial void OnTRACTOR_IDChanged();
    partial void OnPART_MAKERChanging(string value);
    partial void OnPART_MAKERChanged();
    partial void OnPART_SIZEChanging(string value);
    partial void OnPART_SIZEChanged();
    partial void OnPART_SERIAL_NOChanging(string value);
    partial void OnPART_SERIAL_NOChanged();
    partial void OnPART_REMARKSChanging(string value);
    partial void OnPART_REMARKSChanged();
    partial void OnPART_TYPEChanging(int value);
    partial void OnPART_TYPEChanged();
    #endregion
		
		public TRACTOR_PART()
		{
			this._MASTER = default(EntityRef<MASTER>);
			this._TRACTOR_PURCHASE = default(EntityRef<TRACTOR_PURCHASE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_PART_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TRACTOR_PART_ID
		{
			get
			{
				return this._TRACTOR_PART_ID;
			}
			set
			{
				if ((this._TRACTOR_PART_ID != value))
				{
					this.OnTRACTOR_PART_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_PART_ID = value;
					this.SendPropertyChanged("TRACTOR_PART_ID");
					this.OnTRACTOR_PART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_ID", DbType="Int NOT NULL")]
		public int TRACTOR_ID
		{
			get
			{
				return this._TRACTOR_ID;
			}
			set
			{
				if ((this._TRACTOR_ID != value))
				{
					if (this._TRACTOR_PURCHASE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRACTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_ID = value;
					this.SendPropertyChanged("TRACTOR_ID");
					this.OnTRACTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PART_MAKER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PART_MAKER
		{
			get
			{
				return this._PART_MAKER;
			}
			set
			{
				if ((this._PART_MAKER != value))
				{
					this.OnPART_MAKERChanging(value);
					this.SendPropertyChanging();
					this._PART_MAKER = value;
					this.SendPropertyChanged("PART_MAKER");
					this.OnPART_MAKERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PART_SIZE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PART_SIZE
		{
			get
			{
				return this._PART_SIZE;
			}
			set
			{
				if ((this._PART_SIZE != value))
				{
					this.OnPART_SIZEChanging(value);
					this.SendPropertyChanging();
					this._PART_SIZE = value;
					this.SendPropertyChanged("PART_SIZE");
					this.OnPART_SIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PART_SERIAL_NO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PART_SERIAL_NO
		{
			get
			{
				return this._PART_SERIAL_NO;
			}
			set
			{
				if ((this._PART_SERIAL_NO != value))
				{
					this.OnPART_SERIAL_NOChanging(value);
					this.SendPropertyChanging();
					this._PART_SERIAL_NO = value;
					this.SendPropertyChanged("PART_SERIAL_NO");
					this.OnPART_SERIAL_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PART_REMARKS", DbType="VarChar(100)")]
		public string PART_REMARKS
		{
			get
			{
				return this._PART_REMARKS;
			}
			set
			{
				if ((this._PART_REMARKS != value))
				{
					this.OnPART_REMARKSChanging(value);
					this.SendPropertyChanging();
					this._PART_REMARKS = value;
					this.SendPropertyChanged("PART_REMARKS");
					this.OnPART_REMARKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PART_TYPE", DbType="Int NOT NULL")]
		public int PART_TYPE
		{
			get
			{
				return this._PART_TYPE;
			}
			set
			{
				if ((this._PART_TYPE != value))
				{
					if (this._MASTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPART_TYPEChanging(value);
					this.SendPropertyChanging();
					this._PART_TYPE = value;
					this.SendPropertyChanged("PART_TYPE");
					this.OnPART_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTER_TRACTOR_PART", Storage="_MASTER", ThisKey="PART_TYPE", OtherKey="MASTER_ID", IsForeignKey=true)]
		public MASTER MASTER
		{
			get
			{
				return this._MASTER.Entity;
			}
			set
			{
				MASTER previousValue = this._MASTER.Entity;
				if (((previousValue != value) 
							|| (this._MASTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTER.Entity = null;
						previousValue.TRACTOR_PARTs.Remove(this);
					}
					this._MASTER.Entity = value;
					if ((value != null))
					{
						value.TRACTOR_PARTs.Add(this);
						this._PART_TYPE = value.MASTER_ID;
					}
					else
					{
						this._PART_TYPE = default(int);
					}
					this.SendPropertyChanged("MASTER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_PURCHASE_TRACTOR_PART", Storage="_TRACTOR_PURCHASE", ThisKey="TRACTOR_ID", OtherKey="TRACTOR_ID", IsForeignKey=true)]
		public TRACTOR_PURCHASE TRACTOR_PURCHASE
		{
			get
			{
				return this._TRACTOR_PURCHASE.Entity;
			}
			set
			{
				TRACTOR_PURCHASE previousValue = this._TRACTOR_PURCHASE.Entity;
				if (((previousValue != value) 
							|| (this._TRACTOR_PURCHASE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRACTOR_PURCHASE.Entity = null;
						previousValue.TRACTOR_PARTs.Remove(this);
					}
					this._TRACTOR_PURCHASE.Entity = value;
					if ((value != null))
					{
						value.TRACTOR_PARTs.Add(this);
						this._TRACTOR_ID = value.TRACTOR_ID;
					}
					else
					{
						this._TRACTOR_ID = default(int);
					}
					this.SendPropertyChanged("TRACTOR_PURCHASE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRACTOR_PURCHASES")]
	public partial class TRACTOR_PURCHASE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TRACTOR_ID;
		
		private int _INVOICE_ID;
		
		private int _TRACTOR_MODEL_ID;
		
		private string _TRACTOR_ENGINE_NO;
		
		private string _TRACTOR_CHASSIS_NO;
		
		private string _TRACTOR_SPECIFICATION;
		
		private string _TRACTOR_FIP_NO;
		
		private string _TRACTOR_ALTERNATE_MAKER;
		
		private string _TRACTOR_SELFSTARTMAKER;
		
		private System.Nullable<decimal> _TRACTOR_PDI_HOURS;
		
		private string _TRACTOR_SERVICE_BOOK_NO;
		
		private decimal _TRACTOR_PURCHASE_RATE;
		
		private EntitySet<DELIVERY_CHALAN> _DELIVERY_CHALANs;
		
		private EntitySet<JOB_CARD> _JOB_CARDs;
		
		private EntitySet<TRACTOR_PART> _TRACTOR_PARTs;
		
		private EntityRef<INVOICE> _INVOICE;
		
		private EntityRef<TRACTOR_MODEL> _TRACTOR_MODEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRACTOR_IDChanging(int value);
    partial void OnTRACTOR_IDChanged();
    partial void OnINVOICE_IDChanging(int value);
    partial void OnINVOICE_IDChanged();
    partial void OnTRACTOR_MODEL_IDChanging(int value);
    partial void OnTRACTOR_MODEL_IDChanged();
    partial void OnTRACTOR_ENGINE_NOChanging(string value);
    partial void OnTRACTOR_ENGINE_NOChanged();
    partial void OnTRACTOR_CHASSIS_NOChanging(string value);
    partial void OnTRACTOR_CHASSIS_NOChanged();
    partial void OnTRACTOR_SPECIFICATIONChanging(string value);
    partial void OnTRACTOR_SPECIFICATIONChanged();
    partial void OnTRACTOR_FIP_NOChanging(string value);
    partial void OnTRACTOR_FIP_NOChanged();
    partial void OnTRACTOR_ALTERNATE_MAKERChanging(string value);
    partial void OnTRACTOR_ALTERNATE_MAKERChanged();
    partial void OnTRACTOR_SELFSTARTMAKERChanging(string value);
    partial void OnTRACTOR_SELFSTARTMAKERChanged();
    partial void OnTRACTOR_PDI_HOURSChanging(System.Nullable<decimal> value);
    partial void OnTRACTOR_PDI_HOURSChanged();
    partial void OnTRACTOR_SERVICE_BOOK_NOChanging(string value);
    partial void OnTRACTOR_SERVICE_BOOK_NOChanged();
    partial void OnTRACTOR_PURCHASE_RATEChanging(decimal value);
    partial void OnTRACTOR_PURCHASE_RATEChanged();
    #endregion
		
		public TRACTOR_PURCHASE()
		{
			this._DELIVERY_CHALANs = new EntitySet<DELIVERY_CHALAN>(new Action<DELIVERY_CHALAN>(this.attach_DELIVERY_CHALANs), new Action<DELIVERY_CHALAN>(this.detach_DELIVERY_CHALANs));
			this._JOB_CARDs = new EntitySet<JOB_CARD>(new Action<JOB_CARD>(this.attach_JOB_CARDs), new Action<JOB_CARD>(this.detach_JOB_CARDs));
			this._TRACTOR_PARTs = new EntitySet<TRACTOR_PART>(new Action<TRACTOR_PART>(this.attach_TRACTOR_PARTs), new Action<TRACTOR_PART>(this.detach_TRACTOR_PARTs));
			this._INVOICE = default(EntityRef<INVOICE>);
			this._TRACTOR_MODEL = default(EntityRef<TRACTOR_MODEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TRACTOR_ID
		{
			get
			{
				return this._TRACTOR_ID;
			}
			set
			{
				if ((this._TRACTOR_ID != value))
				{
					this.OnTRACTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_ID = value;
					this.SendPropertyChanged("TRACTOR_ID");
					this.OnTRACTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVOICE_ID", DbType="Int NOT NULL")]
		public int INVOICE_ID
		{
			get
			{
				return this._INVOICE_ID;
			}
			set
			{
				if ((this._INVOICE_ID != value))
				{
					if (this._INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINVOICE_IDChanging(value);
					this.SendPropertyChanging();
					this._INVOICE_ID = value;
					this.SendPropertyChanged("INVOICE_ID");
					this.OnINVOICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_MODEL_ID", DbType="Int NOT NULL")]
		public int TRACTOR_MODEL_ID
		{
			get
			{
				return this._TRACTOR_MODEL_ID;
			}
			set
			{
				if ((this._TRACTOR_MODEL_ID != value))
				{
					if (this._TRACTOR_MODEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRACTOR_MODEL_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_MODEL_ID = value;
					this.SendPropertyChanged("TRACTOR_MODEL_ID");
					this.OnTRACTOR_MODEL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_ENGINE_NO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TRACTOR_ENGINE_NO
		{
			get
			{
				return this._TRACTOR_ENGINE_NO;
			}
			set
			{
				if ((this._TRACTOR_ENGINE_NO != value))
				{
					this.OnTRACTOR_ENGINE_NOChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_ENGINE_NO = value;
					this.SendPropertyChanged("TRACTOR_ENGINE_NO");
					this.OnTRACTOR_ENGINE_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_CHASSIS_NO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TRACTOR_CHASSIS_NO
		{
			get
			{
				return this._TRACTOR_CHASSIS_NO;
			}
			set
			{
				if ((this._TRACTOR_CHASSIS_NO != value))
				{
					this.OnTRACTOR_CHASSIS_NOChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_CHASSIS_NO = value;
					this.SendPropertyChanged("TRACTOR_CHASSIS_NO");
					this.OnTRACTOR_CHASSIS_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_SPECIFICATION", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TRACTOR_SPECIFICATION
		{
			get
			{
				return this._TRACTOR_SPECIFICATION;
			}
			set
			{
				if ((this._TRACTOR_SPECIFICATION != value))
				{
					this.OnTRACTOR_SPECIFICATIONChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_SPECIFICATION = value;
					this.SendPropertyChanged("TRACTOR_SPECIFICATION");
					this.OnTRACTOR_SPECIFICATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_FIP_NO", DbType="VarChar(50)")]
		public string TRACTOR_FIP_NO
		{
			get
			{
				return this._TRACTOR_FIP_NO;
			}
			set
			{
				if ((this._TRACTOR_FIP_NO != value))
				{
					this.OnTRACTOR_FIP_NOChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_FIP_NO = value;
					this.SendPropertyChanged("TRACTOR_FIP_NO");
					this.OnTRACTOR_FIP_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_ALTERNATE_MAKER", DbType="VarChar(50)")]
		public string TRACTOR_ALTERNATE_MAKER
		{
			get
			{
				return this._TRACTOR_ALTERNATE_MAKER;
			}
			set
			{
				if ((this._TRACTOR_ALTERNATE_MAKER != value))
				{
					this.OnTRACTOR_ALTERNATE_MAKERChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_ALTERNATE_MAKER = value;
					this.SendPropertyChanged("TRACTOR_ALTERNATE_MAKER");
					this.OnTRACTOR_ALTERNATE_MAKERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_SELFSTARTMAKER", DbType="VarChar(50)")]
		public string TRACTOR_SELFSTARTMAKER
		{
			get
			{
				return this._TRACTOR_SELFSTARTMAKER;
			}
			set
			{
				if ((this._TRACTOR_SELFSTARTMAKER != value))
				{
					this.OnTRACTOR_SELFSTARTMAKERChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_SELFSTARTMAKER = value;
					this.SendPropertyChanged("TRACTOR_SELFSTARTMAKER");
					this.OnTRACTOR_SELFSTARTMAKERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_PDI_HOURS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TRACTOR_PDI_HOURS
		{
			get
			{
				return this._TRACTOR_PDI_HOURS;
			}
			set
			{
				if ((this._TRACTOR_PDI_HOURS != value))
				{
					this.OnTRACTOR_PDI_HOURSChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_PDI_HOURS = value;
					this.SendPropertyChanged("TRACTOR_PDI_HOURS");
					this.OnTRACTOR_PDI_HOURSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_SERVICE_BOOK_NO", DbType="VarChar(50)")]
		public string TRACTOR_SERVICE_BOOK_NO
		{
			get
			{
				return this._TRACTOR_SERVICE_BOOK_NO;
			}
			set
			{
				if ((this._TRACTOR_SERVICE_BOOK_NO != value))
				{
					this.OnTRACTOR_SERVICE_BOOK_NOChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_SERVICE_BOOK_NO = value;
					this.SendPropertyChanged("TRACTOR_SERVICE_BOOK_NO");
					this.OnTRACTOR_SERVICE_BOOK_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACTOR_PURCHASE_RATE", DbType="Decimal(18,2) NOT NULL")]
		public decimal TRACTOR_PURCHASE_RATE
		{
			get
			{
				return this._TRACTOR_PURCHASE_RATE;
			}
			set
			{
				if ((this._TRACTOR_PURCHASE_RATE != value))
				{
					this.OnTRACTOR_PURCHASE_RATEChanging(value);
					this.SendPropertyChanging();
					this._TRACTOR_PURCHASE_RATE = value;
					this.SendPropertyChanged("TRACTOR_PURCHASE_RATE");
					this.OnTRACTOR_PURCHASE_RATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_PURCHASE_DELIVERY_CHALAN", Storage="_DELIVERY_CHALANs", ThisKey="TRACTOR_ID", OtherKey="TRACTOR_ID")]
		public EntitySet<DELIVERY_CHALAN> DELIVERY_CHALANs
		{
			get
			{
				return this._DELIVERY_CHALANs;
			}
			set
			{
				this._DELIVERY_CHALANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_PURCHASE_JOB_CARD", Storage="_JOB_CARDs", ThisKey="TRACTOR_ID", OtherKey="TRACTOR_ID")]
		public EntitySet<JOB_CARD> JOB_CARDs
		{
			get
			{
				return this._JOB_CARDs;
			}
			set
			{
				this._JOB_CARDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_PURCHASE_TRACTOR_PART", Storage="_TRACTOR_PARTs", ThisKey="TRACTOR_ID", OtherKey="TRACTOR_ID")]
		public EntitySet<TRACTOR_PART> TRACTOR_PARTs
		{
			get
			{
				return this._TRACTOR_PARTs;
			}
			set
			{
				this._TRACTOR_PARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_TRACTOR_PURCHASE", Storage="_INVOICE", ThisKey="INVOICE_ID", OtherKey="INVOICE_ID", IsForeignKey=true)]
		public INVOICE INVOICE
		{
			get
			{
				return this._INVOICE.Entity;
			}
			set
			{
				INVOICE previousValue = this._INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INVOICE.Entity = null;
						previousValue.TRACTOR_PURCHASEs.Remove(this);
					}
					this._INVOICE.Entity = value;
					if ((value != null))
					{
						value.TRACTOR_PURCHASEs.Add(this);
						this._INVOICE_ID = value.INVOICE_ID;
					}
					else
					{
						this._INVOICE_ID = default(int);
					}
					this.SendPropertyChanged("INVOICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRACTOR_MODEL_TRACTOR_PURCHASE", Storage="_TRACTOR_MODEL", ThisKey="TRACTOR_MODEL_ID", OtherKey="TRACTOR_MODEL_ID", IsForeignKey=true)]
		public TRACTOR_MODEL TRACTOR_MODEL
		{
			get
			{
				return this._TRACTOR_MODEL.Entity;
			}
			set
			{
				TRACTOR_MODEL previousValue = this._TRACTOR_MODEL.Entity;
				if (((previousValue != value) 
							|| (this._TRACTOR_MODEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRACTOR_MODEL.Entity = null;
						previousValue.TRACTOR_PURCHASEs.Remove(this);
					}
					this._TRACTOR_MODEL.Entity = value;
					if ((value != null))
					{
						value.TRACTOR_PURCHASEs.Add(this);
						this._TRACTOR_MODEL_ID = value.TRACTOR_MODEL_ID;
					}
					else
					{
						this._TRACTOR_MODEL_ID = default(int);
					}
					this.SendPropertyChanged("TRACTOR_MODEL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DELIVERY_CHALANs(DELIVERY_CHALAN entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_PURCHASE = this;
		}
		
		private void detach_DELIVERY_CHALANs(DELIVERY_CHALAN entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_PURCHASE = null;
		}
		
		private void attach_JOB_CARDs(JOB_CARD entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_PURCHASE = this;
		}
		
		private void detach_JOB_CARDs(JOB_CARD entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_PURCHASE = null;
		}
		
		private void attach_TRACTOR_PARTs(TRACTOR_PART entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_PURCHASE = this;
		}
		
		private void detach_TRACTOR_PARTs(TRACTOR_PART entity)
		{
			this.SendPropertyChanging();
			entity.TRACTOR_PURCHASE = null;
		}
	}
}
#pragma warning restore 1591
